import cheerio from "assets://js/lib/cheerio.min.js"; import "assets://js/lib/crypto-js.js"; import 模板 from "./模板.js"; function init_test() { console.log("init_test_start"), console.log("当前版本号:" + VERSION), console.log(RKEY), console.log(JSON.stringify(rule)), console.log("init_test_end") } function pre() { if ("string" == typeof rule.预处理 && rule.预处理 && rule.预处理.trim()) { let code = rule.预处理.trim(); console.log("执行预处理代码:" + code), code.startsWith("js:") && (code = code.replace("js:", "")); try { eval(code) } catch (e) { console.log("预处理执行失败:" + e.message) } } } let rule = {}, vercode = "function" == typeof pdfl ? "drpy2.1" : "drpy2"; const VERSION = vercode + " 3.9.49beta2 20231122", MOBILE_UA = "Mozilla/5.0 (Linux; Android 11; M2007J3SC Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045714 Mobile Safari/537.36", PC_UA = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36", UA = "Mozilla/5.0", UC_UA = "Mozilla/5.0 (Linux; U; Android 9; zh-CN; MI 9 Build/PKQ1.181121.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.2987.108 UCBrowser/12.5.5.1035 Mobile Safari/537.36", IOS_UA = "Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1", RULE_CK = "cookie", CATE_EXCLUDE = "首页|留言|APP|下载|资讯|新闻|动态", TAB_EXCLUDE = "猜你|喜欢|下载|剧情|热播", OCR_RETRY = 3, OCR_API = "http://drpy.nokia.press:8028/ocr/drpy/text"; var MY_URL, HOST, RKEY, fetch, print, log, rule_fetch_params, fetch_params, oheaders, _pdfh, _pdfa, _pd; const DOM_CHECK_ATTR = /(url|src|href|-original|-src|-play|-url|style)$/, SPECIAL_URL = /^(ftp|magnet|thunder|ws):/, NOADD_INDEX = /:eq|:lt|:gt|:first|:last|^body$|^#/, URLJOIN_ATTR = /(url|src|href|-original|-src|-play|-url|style)$/, SELECT_REGEX = /:eq|:lt|:gt|#/g, SELECT_REGEX_A = /:eq|:lt|:gt/g; function 是否正版(e) { return new RegExp("qq.com|iqiyi.com|youku.com|mgtv.com|bilibili.com|sohu.com|ixigua.com|pptv.com|miguvideo.com|le.com|1905.com|fun.tv").test(e) } function urlDeal(e) { return e ? 是否正版(e) && !/miguvideo/.test(e) ? e.split("#")[0].split("?")[0] : e : "" } function setResult(e) { return Array.isArray(e) ? (VODS = [], e.forEach(function (e) { var a = { vod_id: e.url || "", vod_name: e.title || "", vod_remarks: e.desc || "", vod_content: e.content || "", vod_pic: e.pic_url || e.img || "" }, c = Object.keys(e); c.includes("tname") && (a.type_name = e.tname || ""), c.includes("tid") && (a.type_id = e.tid || ""), c.includes("year") && (a.vod_year = e.year || ""), c.includes("actor") && (a.vod_actor = e.actor || ""), c.includes("director") && (a.vod_director = e.director || ""), c.includes("area") && (a.vod_area = e.area || ""), VODS.push(a) }), VODS) : [] } function setResult2(e) { return VODS = e.list || [] } function setHomeResult(e) { return e && "object" == typeof e ? setResult(e.list) : [] } function rc(e) { var a, c; return "maomi_aes.js" === e ? (a = CryptoJS.enc.Utf8.parse("625222f9149e961d"), c = CryptoJS.enc.Utf8.parse("5efdtf6060e2o330"), { De: function (e) { return e = CryptoJS.enc.Hex.parse(e), CryptoJS.AES.decrypt(CryptoJS.enc.Base64.stringify(e), a, { iv: c, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).toString(CryptoJS.enc.Utf8) }, En: function (e) { return CryptoJS.AES.encrypt(e, a, { iv: c, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).ciphertext.toString() } }) : {} } function maoss(jxurl, ref, key) { fetch_params = JSON.parse(JSON.stringify(rule_fetch_params)), eval(getCryptoJS()); try { var getVideoInfo = function (e) { return CryptoJS.AES.decrypt(e, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 }).toString(CryptoJS.enc.Utf8) }, token_key = null == key ? "dvyYRQlnPRCMdQSe" : key, html, html, token_iv = (html = ref ? request(jxurl, { headers: { Referer: ref } }) : request(jxurl), -1 != html.indexOf("&btwaf=") && (html = request(jxurl + "&btwaf" + html.match(/&btwaf(.*?)"/)[1], { headers: { Referer: ref } })), html.split('_token = "')[1].split('"')[0]), key = CryptoJS.enc.Utf8.parse(token_key), iv = CryptoJS.enc.Utf8.parse(token_iv); return eval(html.match(/var config = {[\s\S]*?}/)[0] + ""), config.url.startsWith("http") || (config.url = CryptoJS.AES.decrypt(config.url, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 }).toString(CryptoJS.enc.Utf8)), config.url } catch (e) { return "" } } function urlencode(e) { return e = (e + "").toString(), encodeURIComponent(e).replace(/!/g, "%21").replace(/'/g, "%27").replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/\*/g, "%2A").replace(/%20/g, "+") } function base64Encode(e) { return CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(e)) } function base64Decode(e) { return CryptoJS.enc.Utf8.stringify(CryptoJS.enc.Base64.parse(e)) } function md5(e) { return CryptoJS.MD5(e).toString() } function encodeStr(e, a) { return e = (a = a || "gbk").startsWith("gb") ? gbkTool().encode(e) : e } function decodeStr(e, a) { return e = (a = a || "gbk").startsWith("gb") ? gbkTool().decode(e) : e } function getCryptoJS() { return 'console.log("CryptoJS已装载");' } "function" != typeof Object.assign && (Object.assign = function () { for (var e = arguments[0], a = 1; a < arguments.length; a++) { var c, d = arguments[a]; for (c in d) Object.prototype.hasOwnProperty.call(d, c) && (e[c] = d[c]) } return e }), String.prototype.includes || (String.prototype.includes = function (e, a) { return !((a = "number" != typeof a ? 0 : a) + e.length > this.length) && -1 !== this.indexOf(e, a) }), Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", { value: function (e, a) { if (null == this) throw new TypeError('"this" is null or not defined'); var c = Object(this), d = c.length >>> 0; if (0 != d) for (var a = 0 | a, f = Math.max(0 <= a ? a : d - Math.abs(a), 0); f < d;) { if (c[f] === e) return !0; f++ } return !1 } }), "function" != typeof String.prototype.startsWith && (String.prototype.startsWith = function (e) { return this.slice(0, e.length) === e }), "function" != typeof String.prototype.endsWith && (String.prototype.endsWith = function (e) { return -1 !== this.indexOf(e, this.length - e.length) }), Object.prototype.myValues = function (e) { if (null == e) throw new TypeError("Cannot convert undefined or null to object"); var a, c = []; for (a in e) e.hasOwnProperty(a) && c.push(e[a]); return c }, "function" != typeof Object.prototype.values && (Object.prototype.values = function (e) { if (null == e) throw new TypeError("Cannot convert undefined or null to object"); var a, c = []; for (a in e) e.hasOwnProperty(a) && c.push(e[a]); return c }), "function" != typeof Array.prototype.join && (Array.prototype.join = function (e) { e = e || ""; var a = this; let c = "", d = 0; if (!Array.isArray(a)) throw String(a) + "is not Array"; if (0 === a.length) return ""; if (1 === a.length) return String(a[0]); for (d = 1, c = this[0]; d < a.length; d++)c += String(e) + String(a[d]); return c }), String.prototype.rstrip = function (e) { e = new RegExp(e + "$"); return this.replace(e, "") }, Array.prototype.append = Array.prototype.push, String.prototype.strip = String.prototype.trim; const RSA = { encode: function (e, a, c) { return "function" == typeof rsaEncrypt && (c && "object" == typeof c ? rsaEncrypt(e, a, c) : rsaEncrypt(e, a)) }, decode: function (e, a, c) { return "function" == typeof rsaDecrypt && (c && "object" == typeof c ? rsaDecrypt(e, a, c) : rsaDecrypt(e, a)) } }; function getProxyUrl() { return "function" == typeof getProxy ? getProxy(!0) : "http://127.0.0.1:9978/proxy?do=js" } function forceOrder(c, d, f) { var b = Math.floor(c.length / 2), t = Math.min(c.length - 1, b + 1); if (!(t <= b)) { let e = c[b], a = c[t]; if (d) try { e = e[d], a = a[d] } catch (e) { } if (f && "function" == typeof f) try { e = f(e), a = f(a) } catch (e) { } e += "", a += "", e.match(/(\d+)/) && a.match(/(\d+)/) && (b = Number(e.match(/(\d+)/)[1]), Number(a.match(/(\d+)/)[1]) < b) && c.reverse() } return c } let VODS = [], VOD = {}, TABS = [], LISTS = []; function urljoin(e, a) { return e = e || "", a = a || "", joinUrl(e, a) } globalThis.encodeUrl = urlencode, globalThis.urlencode = urlencode; var urljoin2 = urljoin; const defaultParser = { pdfh: pdfh, pdfa: pdfa, pd: pd }; function pdfh2(e, a) { let c = e; try { "string" != typeof e && (c = e.rr(e.ele).toString()) } catch (e) { print("html对象转文本发生了错误:" + e.message) } let d = defaultParser.pdfh(c, a); e = (a.includes("&&") ? a.split("&&") : a.split(" ")).slice(-1)[0]; if (/style/.test(e.toLowerCase()) && /url\(/.test(d)) try { d = (d = d.match(/url\((.*?)\)/)[1]).replace(/^['|"](.*)['|"]$/, "$1") } catch (e) { } return d } function pdfa2(e, a) { let c = e; try { "string" != typeof e && (c = e.rr(e.ele).toString()) } catch (e) { print("html对象转文本发生了错误:" + e.message) } return defaultParser.pdfa(c, a) } function pd2(e, a, c) { let d = pdfh2(e, a); return void 0 !== c && c || (c = ""), d = DOM_CHECK_ATTR.test(a) && !SPECIAL_URL.test(d) ? /http/.test(d) ? d.substr(d.indexOf("http")) : urljoin(MY_URL, d) : d } const parseTags = { jsp: { pdfh: pdfh2, pdfa: pdfa2, pd: pd2 }, json: { pdfh(a, e) { if (e && e.trim()) { "string" == typeof a && (a = JSON.parse(a)); for (var c of e = (e = (e = e.trim()).startsWith("$.") ? e : "$." + e).split("||")) { let e = cheerio.jp(c, a); if (e = (e = Array.isArray(e) ? e[0] || "" : e || "") && "string" != typeof e ? e.toString() : e) return e } } return "" }, pdfa(e, a) { if (!a || !a.trim()) return ""; "string" == typeof e && (e = JSON.parse(e)), (a = a.trim()).startsWith("$.") || (a = "$." + a); a = cheerio.jp(a, e); return Array.isArray(a) && Array.isArray(a[0]) && 1 === a.length ? a[0] || [] : a || [] }, pd(e, a) { e = parseTags.json.pdfh(e, a); return e && urljoin(MY_URL, e) } }, jq: { pdfh(e, a) { return e && a && a.trim() ? (a = a.trim(), defaultParser.pdfh(e, a)) : "" }, pdfa(e, a) { if (!e || !a || !a.trim()) return []; a = a.trim(); e = defaultParser.pdfa(e, a); return print(`pdfa解析${a}=>` + e.length), e }, pd(e, a, c) { return e && a && a.trim() ? (a = a.trim(), c = c || MY_URL, defaultParser.pd(e, a, c)) : "" } }, getParse(e) { return e.startsWith("jsp:") ? this.jsp : e.startsWith("json:") ? this.json : (e.startsWith("jq:"), this.jq) } }, stringify = JSON.stringify, jsp = parseTags.jsp, jq = parseTags.jq; function readFile(e) { e = e || "./uri.min.js"; var e = os.open(e), a = new ArrayBuffer(1024), e = os.read(e, a, 0, 1024), e = (console.log(e), String.fromCharCode.apply(null, new Uint8Array(a))); return console.log(e), e } function dealJson(e) { try { (e = e.trim()).startsWith("{") && e.endsWith("}") || e.startsWith("[") && e.endsWith("]") || (e = "{" + e.match(/.*?\{(.*)\}/m)[1] + "}") } catch (e) { } try { e = JSON.parse(e) } catch (e) { } return e } var OcrApi = { api: OCR_API, classification: function (e) { let a = ""; try { log("通过drpy_ocr验证码接口过验证..."); var c = request(OCR_API, { data: { img: e }, headers: { "User-Agent": PC_UA }, method: "POST" }, !0); a = c || "" } catch (e) { log("OCR识别验证码发生错误:" + e.message) } return a } }; function verifyCode(e) { let a = 0; var c = getHome(e); let d = ""; for (; a < OCR_RETRY;) { try { var f, b = c + "/index.php/verify/index.html", t = (console.log("验证码链接:" + b), request(b, { withHeaders: !0, toBase64: !0 }, !0)), r = JSON.parse(t), l = (d || (f = Object.keys(r).find(e => "set-cookie" === e.toLowerCase()), d = f ? r[f].split(";")[0] : ""), console.log("cookie:" + d), r.body), o = OcrApi.classification(l), s = (console.log(`第${a + 1}次验证码识别结果:` + o), c + "/index.php/ajax/verify_check?type=search&verify=" + o), i = (console.log(s), request(s, { headers: { Cookie: d, "User-Agent": MOBILE_UA }, method: "POST" })); if ("ok" === (i = JSON.parse(i)).msg) return console.log(`第${a + 1}次验证码提交成功`), d; "ok" !== i.msg && a + 1 >= OCR_RETRY && (d = "") } catch (e) { console.log(`第${a + 1}次验证码提交失败:` + e.message), a + 1 >= OCR_RETRY && (d = "") } a += 1 } return d } function setItem(e, a) { local.set(RKEY, e, a), console.log(`规则${RKEY}设置${e} => ` + a) } function getItem(e, a) { return local.get(RKEY, e) || a } function clearItem(e) { local.delete(RKEY, e) } function getHome(e) { if (!e) return ""; var a = e.split("//"); e = a[0] + "//" + a[1].split("/")[0]; try { e = decodeURIComponent(e) } catch (e) { } return e } function buildUrl(e, a) { a = a || {}, e.indexOf("?") < 0 && (e += "?"); let c = []; var d = Object.keys(a), f = (d.forEach(e => { c.push(e + "=" + a[e]) }), c.join("&")); return 0 < d.length && !e.endsWith("?") && (e += "&"), e += f } function require(url) { eval(request(url)) } function request(e, a, c) { if (c = c || !1, void 0 !== a && a && a !== {} ? (d = a.headers || {}, (f = Object.keys(d).map(e => e.toLowerCase())).includes("user-agent") || (d["User-Agent"] = MOBILE_UA), f.includes("referer") || (d.Referer = getHome(e)), a.headers = d) : (fetch_params && fetch_params.headers || (f = { "User-Agent": MOBILE_UA }, rule.headers && Object.assign(f, rule.headers), (fetch_params = fetch_params || {}).headers = f), fetch_params.headers.Referer || (fetch_params.headers.Referer = getHome(e)), a = fetch_params), !rule.encoding || "utf-8" === rule.encoding || c || a.headers.hasOwnProperty("Content-Type") || a.headers.hasOwnProperty("content-type") || (a.headers["Content-Type"] = "text/html; charset=" + rule.encoding), void 0 !== a.body && a.body && "string" == typeof a.body ? a.headers.hasOwnProperty("Content-Type") || a.headers.hasOwnProperty("content-type") || (a.headers["Content-Type"] = "application/x-www-form-urlencoded; charset=" + rule.encoding) : void 0 !== a.body && a.body && "object" == typeof a.body && (a.data = a.body, delete a.body), !e) return a.withHeaders ? "{}" : ""; a.toBase64 && (a.buffer = 2, delete a.toBase64), console.log(JSON.stringify(a.headers)), console.log("request:" + e + `|method:${a.method || "GET"}|body:` + (a.body || "")); var d = req(e, a), f = d.content || ""; return a.withHeaders ? ((c = d.headers).body = f, JSON.stringify(c)) : f } function post(e, a) { return a.method = "POST", request(e, a) } function checkHtml(e, a, c) { var d; return /\?btwaf=/.test(e) && (d = e.match(/btwaf(.*?)"/)[1], a = a.split("#")[0] + "?btwaf" + d, print("宝塔验证访问链接:" + a), e = request(a, c)), e } function getCode(e, a) { return checkHtml(request(e, a), e, a) } function getHtml(e) { var a = {}, c = (rule.headers && (a.headers = rule.headers), getItem(RULE_CK, "")), c = (c && (a.headers && !Object.keys(a.headers).map(e => e.toLowerCase()).includes("cookie") ? (log("历史无cookie,新增过验证后的cookie"), a.headers.Cookie = c) : a.headers && a.headers.cookie && a.headers.cookie !== c ? (a.headers.Cookie = c, log("历史有小写过期的cookie,更新过验证后的cookie")) : a.headers && a.headers.Cookie && a.headers.Cookie !== c ? (a.headers.Cookie = c, log("历史有大写过期的cookie,更新过验证后的cookie")) : a.headers || (a.headers = { Cookie: c }, log("历史无headers,更新过验证后的含cookie的headers"))), getCode(e, a)); return c } function homeParse(t) { fetch_params = JSON.parse(JSON.stringify(rule_fetch_params)); let r = []; if (t.class_name && t.class_url) { var a = t.class_name.split("&"), c = t.class_url.split("&"), d = Math.min(a.length, c.length); for (let e = 0; e < d; e++)r.push({ type_id: c[e], type_name: a[e] }) } if (t.class_parse) { let b = t.class_parse.split(";"); var e = parseTags.getParse(b[0]); if (_pdfa = e.pdfa, _pdfh = e.pdfh, _pd = e.pd, MY_URL = rule.url, 3 <= b.length) try { var f, l = getHtml(t.MY_URL); l && (homeHtmlCache = l, f = _pdfa(l, b[0])) && 0 < f.length && f.forEach((a, c) => { try { var d, f = _pdfh(a, b[1]); if (!t.cate_exclude || !new RegExp(t.cate_exclude).test(f)) { let e = _pd(a, b[2]); 3 < b.length && b[3] && (d = new RegExp(b[3]), e = e.match(d)[1]), r.push({ type_id: e.trim(), type_name: f.trim() }) } } catch (e) { console.log(`分类列表定位第${c}个元素正常报错:` + e.message) } }) } catch (e) { console.log(e.message) } } e = { class: r = r.filter(e => !t.cate_exclude || !new RegExp(t.cate_exclude).test(e.type_name)) }; return t.filter && (e.filters = t.filter), console.log(JSON.stringify(e)), JSON.stringify(e) } function getPP(e, a, c, d) { try { return "*" === e[a] && c.length > d ? c[d] : e[a] } catch (e) { return "" } } function homeVodParse(homeVodObj) { fetch_params = JSON.parse(JSON.stringify(rule_fetch_params)); let d = [], t1 = (MY_URL = homeVodObj.homeUrl, console.log(MY_URL), (new Date).getTime()), p = homeVodObj.推荐; if (print("p:" + p), "*" === p && rule.一级 && (p = rule.一级, homeVodObj.double = !1), !p || "string" != typeof p) return "{}"; p = p.trim(); let pp = rule.一级.split(";"); if (p.startsWith("js:")) { const TYPE = "home"; var input = MY_URL; HOST = rule.host, eval(p.replace("js:", "")), d = VODS } else { if (p = p.split(";"), !homeVodObj.double && p.length < 5) return "{}"; if (homeVodObj.double && p.length < 6) return "{}"; let p0 = getPP(p, 0, pp, 0), _ps = parseTags.getParse(p0), is_json = (_pdfa = _ps.pdfa, _pdfh = _ps.pdfh, _pd = _ps.pd, p0.startsWith("json:")), html = (p0 = p0.replace(/^(jsp:|json:|jq:)/, ""), homeHtmlCache || getHtml(MY_URL)); homeHtmlCache = void 0, is_json && (html = dealJson(html)); try { if (console.log("double:" + homeVodObj.double), homeVodObj.double) { let items = _pdfa(html, p0), p1 = getPP(p, 1, pp, 0), p2 = getPP(p, 2, pp, 1), p3 = getPP(p, 3, pp, 2), p4 = getPP(p, 4, pp, 3), p5 = getPP(p, 5, pp, 4), p6 = getPP(p, 6, pp, 5); for (var item of items) { let items2 = _pdfa(item, p1); for (var item2 of items2) try { let title = _pdfh(item2, p2), img = ""; try { img = _pd(item2, p3) } catch (e) { } let desc = ""; try { desc = _pdfh(item2, p4) } catch (e) { } let links = []; for (var _p5 of p5.split("+")) { let link = homeVodObj.detailUrl ? _pdfh(item2, _p5) : _pd(item2, _p5, MY_URL); links.push(link) } let content, vid = (content = 6 < p.length && p[6] ? _pdfh(item2, p6) : "", links.join("$")), vod = ("*" === rule.二级 && (vid = vid + "@@" + title + "@@" + img), { vod_name: title, vod_pic: img, vod_remarks: desc, vod_content: content, vod_id: vid }); d.push(vod) } catch (e) { console.log("首页列表双层定位处理发生错误:" + e.message) } } } else { let items = _pdfa(html, p0), p1 = getPP(p, 1, pp, 1), p2 = getPP(p, 2, pp, 2), p3 = getPP(p, 3, pp, 3), p4 = getPP(p, 4, pp, 4), p5 = getPP(p, 5, pp, 5); for (let item of items) try { let title = _pdfh(item, p1), img = ""; try { img = _pd(item, p2, MY_URL) } catch (e) { } let desc = ""; try { desc = _pdfh(item, p3) } catch (e) { } let links = []; for (let _p5 of p4.split("+")) { let link = homeVodObj.detailUrl ? _pdfh(item, _p5) : _pd(item, _p5, MY_URL); links.push(link) } let content, vid = (content = 5 < p.length && p[5] ? _pdfh(item, p5) : "", links.join("$")), vod = ("*" === rule.二级 && (vid = vid + "@@" + title + "@@" + img), { vod_name: title, vod_pic: img, vod_remarks: desc, vod_content: content, vod_id: vid }); d.push(vod) } catch (e) { console.log("首页列表单层定位处理发生错误:" + e.message) } } } catch (e) { } } let t2 = (new Date).getTime(); return console.log("加载首页推荐耗时:" + (t2 - t1) + "毫秒"), rule.图片来源 && d.forEach(e => { e.vod_pic && e.vod_pic.startsWith("http") && (e.vod_pic = e.vod_pic + rule.图片来源) }), 0 < d.length && print(d.slice(0, 2)), JSON.stringify({ list: d }) } function categoryParse(cateObj) { fetch_params = JSON.parse(JSON.stringify(rule_fetch_params)); let p = cateObj.一级; if (!p || "string" != typeof p) return "{}"; let d = [], url = cateObj.url.replaceAll("fyclass", cateObj.tid); if (1 === cateObj.pg && url.includes("[") && url.includes("]") ? url = url.split("[")[1].split("]")[0] : 1 < cateObj.pg && url.includes("[") && url.includes("]") && (url = url.split("[")[0]), rule.filter_url) { /fyfilter/.test(url) ? url = url.replace("fyfilter", rule.filter_url) : (url.endsWith("&") || rule.filter_url.startsWith("&") || (url += "&"), url += rule.filter_url); let fl = cateObj.filter ? cateObj.extend : {}; if (rule.filter_def && "object" == typeof rule.filter_def) try { if (0 < Object.keys(rule.filter_def).length && rule.filter_def.hasOwnProperty(cateObj.tid)) { let self_fl_def = rule.filter_def[cateObj.tid]; if (self_fl_def && "object" == typeof self_fl_def) { let fl_def = JSON.parse(JSON.stringify(self_fl_def)); fl = Object.assign(fl_def, fl) } } } catch (e) { print("合并不同分类对应的默认筛选出错:" + e.message) } let new_url; new_url = cheerio.jinja2(url, { fl: fl }), url = new_url } if (/fypage/.test(url)) if (url.includes("(") && url.includes(")")) { let url_rep = url.match(/.*?\((.*)\)/)[1], cnt_page = url_rep.replaceAll("fypage", cateObj.pg), cnt_pg = eval(cnt_page); url = url.replaceAll(url_rep, cnt_pg).replaceAll("(", "").replaceAll(")", "") } else url = url.replaceAll("fypage", cateObj.pg); MY_URL = url, console.log(MY_URL), p = p.trim(); const MY_CATE = cateObj.tid; if (p.startsWith("js:")) { var MY_FL = cateObj.extend; const TYPE = "cate"; var input = MY_URL; const MY_PAGE = cateObj.pg; var desc = ""; eval(p.trim().replace("js:", "")), d = VODS } else { if (p = p.split(";"), p.length < 5) return "{}"; let _ps = parseTags.getParse(p[0]), is_json = (_pdfa = _ps.pdfa, _pdfh = _ps.pdfh, _pd = _ps.pd, p[0].startsWith("json:")); p[0] = p[0].replace(/^(jsp:|json:|jq:)/, ""); try { let html = getHtml(MY_URL); if (html) { is_json && (html = dealJson(html)); let list = _pdfa(html, p[0]); list.forEach(a => { var e = p[4].split("+").map(e => rule.detailUrl ? _pdfh(a, e) : _pd(a, e, MY_URL)).join("$"); let c = rule.detailUrl ? MY_CATE + "$" + e : e; var e = _pdfh(a, p[1]).replace(/\n|\t/g, "").trim(), f = _pd(a, p[2], MY_URL); "*" === rule.二级 && (c = c + "@@" + e + "@@" + f), d.push({ vod_id: c, vod_name: e, vod_pic: f, vod_remarks: _pdfh(a, p[3]).replace(/\n|\t/g, "").trim() }) }) } } catch (e) { console.log(e.message) } } rule.图片来源 && d.forEach(e => { e.vod_pic && e.vod_pic.startsWith("http") && (e.vod_pic = e.vod_pic + rule.图片来源) }), 0 < d.length && print(d.slice(0, 2)); let pagecount = 0, nodata = (rule.pagecount && "object" == typeof rule.pagecount && rule.pagecount.hasOwnProperty(MY_CATE) && (print(`MY_CATE:${MY_CATE},pagecount:` + JSON.stringify(rule.pagecount)), pagecount = parseInt(rule.pagecount[MY_CATE])), { list: [{ vod_name: "无数据,防无限请求", vod_id: "no_data", vod_remarks: "不要点,会崩的", vod_pic: "https://ghproxy.net/https://raw.githubusercontent.com/hjdhnx/dr_py/main/404.jpg" }], total: 1, pagecount: 1, page: 1, limit: 1 }), vod = d.length < 1 ? JSON.stringify(nodata) : JSON.stringify({ page: parseInt(cateObj.pg), pagecount: pagecount || 999, limit: 20, total: 999, list: d }); return vod } function searchParse(searchObj) { fetch_params = JSON.parse(JSON.stringify(rule_fetch_params)); let d = []; if (!searchObj.searchUrl) return "{}"; let p = "*" === searchObj.搜索 && rule.一级 ? rule.一级 : searchObj.搜索; if (!p || "string" != typeof p) return "{}"; p = p.trim(); let pp = rule.一级.split(";"), url = searchObj.searchUrl.replaceAll("**", searchObj.wd); if (1 === searchObj.pg && url.includes("[") && url.includes("]") && !url.includes("#") ? url = url.split("[")[1].split("]")[0] : 1 < searchObj.pg && url.includes("[") && url.includes("]") && !url.includes("#") && (url = url.split("[")[0]), /fypage/.test(url)) if (url.includes("(") && url.includes(")")) { let url_rep = url.match(/.*?\((.*)\)/)[1], cnt_page = url_rep.replaceAll("fypage", searchObj.pg), cnt_pg = eval(cnt_page); url = url.replaceAll(url_rep, cnt_pg).replaceAll("(", "").replaceAll(")", "") } else url = url.replaceAll("fypage", searchObj.pg); if (MY_URL = url, console.log(MY_URL), p.startsWith("js:")) { const TYPE = "search", MY_PAGE = searchObj.pg, KEY = searchObj.wd; var input = MY_URL, detailUrl = rule.detailUrl || ""; eval(p.trim().replace("js:", "")), d = VODS } else { if (p = p.split(";"), p.length < 5) return "{}"; let p0 = getPP(p, 0, pp, 0), _ps = parseTags.getParse(p0), is_json = (_pdfa = _ps.pdfa, _pdfh = _ps.pdfh, _pd = _ps.pd, p0.startsWith("json:")); p0 = p0.replace(/^(jsp:|json:|jq:)/, ""); try { let req_method = 1 < MY_URL.split(";").length ? MY_URL.split(";")[1].toLowerCase() : "get", html; if ("post" === req_method) { let rurls = MY_URL.split(";")[0].split("#"), rurl = rurls[0], params = 1 < rurls.length ? rurls[1] : "", _fetch_params = (print(`post=》rurl:${rurl},params:` + params), JSON.parse(JSON.stringify(rule_fetch_params))), postData = { body: params }; Object.assign(_fetch_params, postData), html = post(rurl, _fetch_params) } else if ("postjson" === req_method) { let rurls = MY_URL.split(";")[0].split("#"), rurl = rurls[0], params = 1 < rurls.length ? rurls[1] : ""; print(`postjson-》rurl:${rurl},params:` + params); try { params = JSON.parse(params) } catch (e) { params = "{}" } let _fetch_params = JSON.parse(JSON.stringify(rule_fetch_params)), postData = { body: params }; Object.assign(_fetch_params, postData), html = post(rurl, _fetch_params) } else html = getHtml(MY_URL); if (html) { if (/系统安全验证|输入验证码/.test(html)) { let cookie = verifyCode(MY_URL); cookie ? (console.log("本次成功过验证,cookie:" + cookie), setItem(RULE_CK, cookie)) : console.log("本次自动过搜索验证失败,cookie:" + cookie), html = getHtml(MY_URL) } html.includes(searchObj.wd) || (console.log("搜索结果源码未包含关键字,疑似搜索失败,正为您打印结果源码"), console.log(html)), is_json && (html = dealJson(html)); let list = _pdfa(html, p0), p1 = getPP(p, 1, pp, 1), p2 = getPP(p, 2, pp, 2), p3 = getPP(p, 3, pp, 3), p4 = getPP(p, 4, pp, 4), p5 = getPP(p, 5, pp, 5); list.forEach(a => { var e = p4.split("+").map(e => rule.detailUrl ? _pdfh(a, e) : _pd(a, e, MY_URL)).join("$"); let c, f = (c = 5 < p.length && p[5] ? _pdfh(a, p5) : "", e); var e = _pdfh(a, p1).replace(/\n|\t/g, "").trim(), b = _pd(a, p2, MY_URL), e = { vod_id: f = "*" === rule.二级 ? f + "@@" + e + "@@" + b : f, vod_name: e, vod_pic: b, vod_remarks: _pdfh(a, p3).replace(/\n|\t/g, "").trim(), vod_content: c.replace(/\n|\t/g, "").trim() }; d.push(e) }) } } catch (e) { return print("搜索发生错误:" + e.message), "{}" } } return rule.图片来源 && d.forEach(e => { e.vod_pic && e.vod_pic.startsWith("http") && (e.vod_pic = e.vod_pic + rule.图片来源) }), JSON.stringify({ page: parseInt(searchObj.pg), pagecount: 10, limit: 20, total: 100, list: d }) } function detailParse(detailObj) { let t1 = (new Date).getTime(), orId = (fetch_params = JSON.parse(JSON.stringify(rule_fetch_params)), detailObj.orId), vod_name = "片名", vod_pic = "", vod_id = orId; if ("*" === rule.二级) { let extra = orId.split("@@"); vod_name = 1 < extra.length ? extra[1] : vod_name, vod_pic = 2 < extra.length ? extra[2] : vod_pic } let vod = { vod_id: vod_id, vod_name: vod_name, vod_pic: vod_pic, type_name: "类型", vod_year: "年份", vod_area: "地区", vod_remarks: "更新信息", vod_actor: "主演", vod_director: "导演", vod_content: "简介" }, p = detailObj.二级, url = detailObj.url, detailUrl = detailObj.detailUrl, fyclass = detailObj.fyclass, tab_exclude = detailObj.tab_exclude, html = detailObj.html || ""; if (MY_URL = url, detailObj.二级访问前) try { print("尝试在二级访问前执行代码:" + detailObj.二级访问前), eval(detailObj.二级访问前.trim().replace("js:", "")) } catch (e) { print("二级访问前执行代码出现错误:" + e.message) } if ("*" === p) vod.vod_play_from = "道长在线", vod.vod_remarks = detailUrl, vod.vod_actor = "没有二级,只有一级链接直接嗅探播放", vod.vod_content = MY_URL, vod.vod_play_url = "嗅探播放$" + MY_URL.split("@@")[0]; else if ("string" == typeof p && p.trim().startsWith("js:")) { const TYPE = "detail"; var input = MY_URL, play_url = ""; eval(p.trim().replace("js:", "")), vod = VOD, console.log(JSON.stringify(vod)) } else if (p && "object" == typeof p) { let tt1 = (new Date).getTime(); html = html || getHtml(MY_URL), print(`二级${MY_URL}仅获取源码耗时:${(new Date).getTime() - tt1}毫秒`); let _ps, tt2 = (p.is_json ? (print("二级是json"), _ps = parseTags.json, html = dealJson(html)) : _ps = p.is_jsp ? (print("二级是jsp"), parseTags.jsp) : (p.is_jq ? print("二级是jq") : print("二级默认jq"), parseTags.jq), (new Date).getTime()); if (print(`二级${MY_URL}获取并装载源码耗时:${tt2 - tt1}毫秒`), _pdfa = _ps.pdfa, _pdfh = _ps.pdfh, _pd = _ps.pd, p.title) { let p1 = p.title.split(";"), type_name = (vod.vod_name = _pdfh(html, p1[0]).replace(/\n|\t/g, "").trim(), 1 < p1.length ? _pdfh(html, p1[1]).replace(/\n|\t/g, "").replace(/ /g, "").trim() : ""); vod.type_name = type_name || vod.type_name } if (p.desc) try { let p1 = p.desc.split(";"); vod.vod_remarks = _pdfh(html, p1[0]).replace(/\n|\t/g, "").trim(), vod.vod_year = 1 < p1.length ? _pdfh(html, p1[1]).replace(/\n|\t/g, "").trim() : "", vod.vod_area = 2 < p1.length ? _pdfh(html, p1[2]).replace(/\n|\t/g, "").trim() : "", vod.vod_actor = 3 < p1.length ? _pdfh(html, p1[3]).replace(/\n|\t/g, "").trim() : "", vod.vod_director = 4 < p1.length ? _pdfh(html, p1[4]).replace(/\n|\t/g, "").trim() : "" } catch (e) { } if (p.content) try { let p1 = p.content.split(";"); vod.vod_content = _pdfh(html, p1[0]).replace(/\n|\t/g, "").trim() } catch (e) { } if (p.img) try { let p1 = p.img.split(";"); vod.vod_pic = _pd(html, p1[0], MY_URL) } catch (e) { } let vod_play_from = "$$$", playFrom = []; if (p.重定向 && p.重定向.startsWith("js:") && (print("开始执行重定向代码:" + p.重定向), html = eval(p.重定向.replace("js:", ""))), p.tabs) { if (p.tabs.startsWith("js:")) { print("开始执行tabs代码:" + p.tabs); var input = MY_URL; eval(p.tabs.replace("js:", "")), playFrom = TABS } else { let p_tab = p.tabs.split(";")[0], vHeader = _pdfa(html, p_tab), tab_text = (console.log(vHeader.length), p.tab_text || "body&&Text"), new_map = {}; for (var v of vHeader) { let v_title = _pdfh(v, tab_text).trim(); console.log(v_title), tab_exclude && new RegExp(tab_exclude).test(v_title) || (new_map.hasOwnProperty(v_title) ? new_map[v_title] += 1 : new_map[v_title] = 1, 1 < new_map[v_title] && (v_title += Number(new_map[v_title] - 1)), playFrom.push(v_title)) } } console.log(JSON.stringify(playFrom)) } else playFrom = ["道长在线"]; vod.vod_play_from = playFrom.join(vod_play_from); let vod_play_url = "$$$", vod_tab_list = []; if (p.lists) if (p.lists.startsWith("js:")) { print("开始执行lists代码:" + p.lists); try { var input = MY_URL, play_url = "", i; for (i in eval(p.lists.replace("js:", "")), LISTS) if (LISTS.hasOwnProperty(i)) try { LISTS[i] = LISTS[i].map(e => e.split("$").slice(0, 2).join("$")) } catch (e) { print("格式化LISTS发生错误:" + e.message) } vod_play_url = LISTS.map(e => e.join("#")).join(vod_play_url) } catch (e) { print("js执行lists: 发生错误:" + e.message) } } else { let list_text = p.list_text || "body&&Text", list_url = p.list_url || "a&&href", is_tab_js = p.tabs.trim().startsWith("js:"); for (let i = 0; i < playFrom.length; i++) { let tab_name = playFrom[i], tab_ext = 1 < p.tabs.split(";").length && !is_tab_js ? p.tabs.split(";")[1] : "", p1 = p.lists.replaceAll("#idv", tab_name).replaceAll("#id", i), tabName = (tab_ext = tab_ext.replaceAll("#idv", tab_name).replaceAll("#id", i), tab_ext ? _pdfh(html, tab_ext) : tab_name), new_vod_list = (console.log(tabName), []), tt1 = (new Date).getTime(); if ("function" == typeof pdfl) new_vod_list = pdfl(html, p1, list_text, list_url, MY_URL); else { let vodList = []; try { vodList = _pdfa(html, p1), console.log("len(vodList):" + vodList.length) } catch (e) { } for (let i = 0; i < vodList.length; i++) { let it = vodList[i]; new_vod_list.push(_pdfh(it, list_text).trim() + "$" + _pd(it, list_url, MY_URL)) } } 0 < new_vod_list.length && (new_vod_list = forceOrder(new_vod_list, "", e => e.split("$")[0]), console.log(`drpy影响性能代码共计列表数循环次数:${new_vod_list.length},耗时:${(new Date).getTime() - tt1}毫秒`)); let vlist = new_vod_list.join("#"); vod_tab_list.push(vlist) } vod_play_url = vod_tab_list.join(vod_play_url) } vod.vod_play_url = vod_play_url } rule.图片来源 && vod.vod_pic && vod.vod_pic.startsWith("http") && (vod.vod_pic = vod.vod_pic + rule.图片来源), (!vod.vod_id || vod_id.includes("$") && vod.vod_id !== vod_id) && (vod.vod_id = vod_id); let t2 = (new Date).getTime(); return console.log(`加载二级界面${MY_URL}耗时:${t2 - t1}毫秒`), vod = vodDeal(vod), JSON.stringify({ list: [vod] }) } function get_tab_index(e) { let c = {}; return e.vod_play_from.split("$$$").forEach((e, a) => { c[e] = a }), c } function vodDeal(e) { var d = e.vod_play_from.split("$$$"); let c = e.vod_play_url.split("$$$"), f = d; let b = d, t = c; if (rule.tab_remove && 0 < rule.tab_remove.length || rule.tab_order && 0 < rule.tab_order.length) { let a = get_tab_index(e); if (rule.tab_remove && 0 < rule.tab_remove.length && (f = d.filter(e => !rule.tab_remove.includes(e)), b = f), rule.tab_order && 0 < rule.tab_order.length) { let c = rule.tab_order; d = f.sort((e, a) => (-1 === c.indexOf(e) ? 9999 : c.indexOf(e)) - (-1 === c.indexOf(a) ? 9999 : c.indexOf(a))), b = d } t = b.map(e => c[a[e]]) } return rule.tab_rename && "object" == typeof rule.tab_rename & 0 < Object.keys(rule.tab_rename).length && (d = b.map(e => rule.tab_rename[e] || e), b = d), e.vod_play_from = b.join("$$$"), e.vod_play_url = t.join("$$$"), e } function tellIsJx(e) { try { return !/\.(m3u8|mp4|m4a)$/.test(e.split("?")[0]) && 是否正版(e) ? 1 : 0 } catch (e) { return 1 } } function playParse(playObj) { if (fetch_params = JSON.parse(JSON.stringify(rule_fetch_params)), MY_URL = playObj.url, !/http/.test(MY_URL)) try { MY_URL = base64Decode(MY_URL) } catch (e) { } MY_URL = decodeURIComponent(MY_URL); var input = MY_URL; let common_play = { parse: 1, url: input, jx: tellIsJx(input) }, lazy_play; if (rule.play_parse && rule.lazy) if (rule.play_parse && rule.lazy && "string" == typeof rule.lazy) try { let lazy_code = rule.lazy.replace("js:", "").trim(); print("开始执行js免嗅=>" + lazy_code), eval(lazy_code), lazy_play = "object" == typeof input ? input : { parse: 1, jx: tellIsJx(input), url: input } } catch (e) { print("js免嗅错误:" + e.message), lazy_play = common_play } else lazy_play = common_play; else lazy_play = common_play; if (Array.isArray(rule.play_json) && 0 < rule.play_json.length) { let web_url = lazy_play.url; for (var pjson of rule.play_json) if (pjson.re && ("*" === pjson.re || web_url.match(new RegExp(pjson.re))) && pjson.json && "object" == typeof pjson.json) { let base_json = pjson.json; lazy_play = Object.assign(lazy_play, base_json); break } } else if (rule.play_json && !Array.isArray(rule.play_json)) { let base_json = { jx: 1, parse: 1 }; lazy_play = Object.assign(lazy_play, base_json) } else if (!rule.play_json) { let base_json = { jx: 0, parse: 1 }; lazy_play = Object.assign(lazy_play, base_json) } return console.log(JSON.stringify(lazy_play)), JSON.stringify(lazy_play) } function proxyParse(proxyObj) { var input = proxyObj.params; if (!proxyObj.proxy_rule) return [404, "text/plain", "Not Found"]; log("准备执行本地代理规则:\n" + proxyObj.proxy_rule); try { return eval(proxyObj.proxy_rule), input && input !== proxyObj.params && Array.isArray(input) && 3 === input.length ? input : [404, "text/plain", "Not Found"] } catch (e) { return [500, "text/plain", "代理规则错误:" + e.message] } } function isVideoParse(isVideoObj) { var input = isVideoObj.url; if (!isVideoObj.t) { let re_matcher = new RegExp(isVideoObj.isVideo, "i"); return re_matcher.test(input) } try { return eval(isVideoObj.isVideo), "boolean" == typeof input && input } catch (e) { return log("执行嗅探规则发生错误:" + e.message), !1 } } function init(ext) { console.log("init"); try { let muban = 模板.getMubans(); if ("object" == typeof ext) rule = ext; else if ("string" == typeof ext) if (ext.startsWith("http")) { let js = request(ext, { method: "GET" }); js && eval(js.replace("var rule", "rule")) } else eval(ext.replace("var rule", "rule")); rule.模板 && muban.hasOwnProperty(rule.模板) && (print("继承模板:" + rule.模板), rule = Object.assign(muban[rule.模板], rule)); let rule_cate_excludes = (rule.cate_exclude || "").split("|").filter(e => e.trim()), rule_tab_excludes = (rule.tab_exclude || "").split("|").filter(e => e.trim()); if (rule_cate_excludes = rule_cate_excludes.concat(CATE_EXCLUDE.split("|").filter(e => e.trim())), rule_tab_excludes = rule_tab_excludes.concat(TAB_EXCLUDE.split("|").filter(e => e.trim())), rule.cate_exclude = rule_cate_excludes.join("|"), rule.tab_exclude = rule_tab_excludes.join("|"), rule.host = (rule.host || "").rstrip("/"), HOST = rule.host, rule.hostJs) { console.log("检测到hostJs,准备执行..."); try { eval(rule.hostJs), rule.host = HOST.rstrip("/") } catch (e) { console.log(`执行${rule.hostJs}获取host发生错误:` + e.message) } } if (rule.url = rule.url || "", rule.double = rule.double || !1, rule.homeUrl = rule.homeUrl || "", rule.detailUrl = rule.detailUrl || "", rule.searchUrl = rule.searchUrl || "", rule.homeUrl = rule.host && rule.homeUrl ? urljoin(rule.host, rule.homeUrl) : rule.homeUrl || rule.host, rule.detailUrl = rule.host && rule.detailUrl ? urljoin(rule.host, rule.detailUrl) : rule.detailUrl, rule.二级访问前 = rule.二级访问前 || "", rule.url.includes("[") && rule.url.includes("]")) { let u1 = rule.url.split("[")[0], u2 = rule.url.split("[")[1].split("]")[0]; rule.url = rule.host && rule.url ? urljoin(rule.host, u1) + "[" + urljoin(rule.host, u2) + "]" : rule.url } else rule.url = rule.host && rule.url ? urljoin(rule.host, rule.url) : rule.url; if (rule.searchUrl.includes("[") && rule.searchUrl.includes("]") && !rule.searchUrl.includes("#")) { let u1 = rule.searchUrl.split("[")[0], u2 = rule.searchUrl.split("[")[1].split("]")[0]; rule.searchUrl = rule.host && rule.searchUrl ? urljoin(rule.host, u1) + "[" + urljoin(rule.host, u2) + "]" : rule.searchUrl } else rule.searchUrl = rule.host && rule.searchUrl ? urljoin(rule.host, rule.searchUrl) : rule.searchUrl; if (rule.timeout = rule.timeout || 5e3, rule.encoding = rule.编码 || rule.encoding || "utf-8", rule.search_encoding = rule.搜索编码 || rule.search_encoding || "", rule.图片来源 = rule.图片来源 || "", rule.play_json = rule.hasOwnProperty("play_json") ? rule.play_json : [], rule.pagecount = rule.hasOwnProperty("pagecount") ? rule.pagecount : {}, rule.proxy_rule = rule.hasOwnProperty("proxy_rule") ? rule.proxy_rule : "", rule.sniffer = rule.hasOwnProperty("sniffer") ? rule.sniffer : "", rule.sniffer = !(!rule.sniffer || "0" === rule.sniffer || "false" === rule.sniffer), rule.isVideo = rule.hasOwnProperty("isVideo") ? rule.isVideo : "", rule.tab_remove = rule.hasOwnProperty("tab_remove") ? rule.tab_remove : [], rule.tab_order = rule.hasOwnProperty("tab_order") ? rule.tab_order : [], rule.tab_rename = rule.hasOwnProperty("tab_rename") ? rule.tab_rename : {}, rule.headers && "object" == typeof rule.headers) try { let header_keys = Object.keys(rule.headers); for (var k of header_keys) if ("user-agent" === k.toLowerCase()) { let v = rule.headers[k]; console.log(v), ["MOBILE_UA", "PC_UA", "UC_UA", "IOS_UA", "UA"].includes(v) && (rule.headers[k] = eval(v)) } else if ("cookie" === k.toLowerCase()) { let v = rule.headers[k]; if (v && v.startsWith("http")) { console.log(v); try { v = fetch(v), console.log(v), rule.headers[k] = v } catch (e) { console.log(`从${v}获取cookie发生错误:` + e.message) } } } } catch (e) { console.log("处理headers发生错误:" + e.message) } rule_fetch_params = { headers: rule.headers || !1, timeout: rule.timeout, encoding: rule.encoding }, oheaders = rule.headers || {}, RKEY = "undefined" != typeof key && key ? key : "drpy_" + (rule.title || rule.host), pre(), init_test() } catch (e) { console.log("init_test发生错误:" + e.message) } } fetch = request, print = function (a) { if ("object" == typeof (a = a || "") && 0 < Object.keys(a).length) try { a = JSON.stringify(a), console.log(a) } catch (e) { console.log(typeof a + ":" + a.length) } else "object" == typeof a && Object.keys(a).length < 1 ? console.log("null object") : console.log(a) }, log = print; let homeHtmlCache = void 0; function home(e) { return console.log("home"), homeParse({ filter: rule.filter || !1, MY_URL: rule.homeUrl, class_name: rule.class_name || "", class_url: rule.class_url || "", class_parse: rule.class_parse || "", cate_exclude: rule.cate_exclude }) } function homeVod(e) { return console.log("homeVod"), homeVodParse({ "推荐": rule.推荐, double: rule.double, homeUrl: rule.homeUrl, detailUrl: rule.detailUrl }) } function category(e, a, c, d) { return categoryParse({ url: rule.url, "一级": rule.一级, tid: e, pg: parseInt(a), filter: c, extend: d }) } function detail(e) { var a = e; let c = ""; log("orId:" + a), -1 < e.indexOf("$") && (d = e.split("$"), c = d[0], e = d[1]); var d = e.split("@@")[0]; let f; return detailParse({ orId: a, url: f = d.startsWith("http") || d.includes("/") ? d.includes("/") ? urljoin(rule.homeUrl, d) : d : rule.detailUrl.replaceAll("fyid", d).replaceAll("fyclass", c), "二级": rule.二级, "二级访问前": rule.二级访问前, detailUrl: d, fyclass: c, tab_exclude: rule.tab_exclude }) } function play(e, a, c) { return playParse({ url: a, flag: e, flags: c }) } function search(e, a, c) { return rule.search_encoding ? "utf-8" !== rule.search_encoding.toLowerCase() && (e = encodeStr(e, rule.search_encoding)) : rule.encoding && "utf-8" !== rule.encoding.toLowerCase() && (e = encodeStr(e, rule.encoding)), searchParse({ searchUrl: rule.searchUrl, "搜索": rule.搜索, wd: e, pg: c || 1, quick: a }) } function proxy(e) { return rule.proxy_rule && rule.proxy_rule.trim() && (rule.proxy_rule = rule.proxy_rule.trim()), rule.proxy_rule.startsWith("js:") && (rule.proxy_rule = rule.proxy_rule.replace("js:", "")), proxyParse({ params: e, proxy_rule: rule.proxy_rule }) } function sniffer() { var e = rule.sniffer || !1; return e && log("开始执行辅助嗅探代理规则..."), e } function isVideo(e) { let a = 0, c; (c = rule.isVideo && rule.isVideo.trim() ? rule.isVideo.trim() : c).startsWith("js:") && (c = c.replace("js:", ""), a = 1); e = isVideoParse({ url: e, isVideo: c, t: a }); return e && log("成功执行辅助嗅探规则并检测到视频地址:\n" + rule.isVideo), e } function DRPY() { return { init: init, home: home, homeVod: homeVod, category: category, detail: detail, play: play, search: search, proxy: proxy, sniffer: sniffer, isVideo: isVideo } } export default { init: init, home: home, homeVod: homeVod, category: category, detail: detail, play: play, search: search, proxy: proxy, sniffer: sniffer, isVideo: isVideo, DRPY: DRPY }; function gbkTool() { var e = "4e:020405060f12171f20212326292e2f313335373c40414244464a5155575a5b6263646567686a6b6c6d6e6f727475767778797a7b7c7d7f808182838485878a#909697999c9d9ea3aaafb0b1b4b6b7b8b9bcbdbec8cccfd0d2dadbdce0e2e6e7e9edeeeff1f4f8f9fafcfe,4f:00020304050607080b0c12131415161c1d212328292c2d2e31333537393b3e3f40414244454748494a4b4c525456616266686a6b6d6e7172757778797a7d8081828586878a8c8e909293959698999a9c9e9fa1a2a4abadb0b1b2b3b4b6b7b8b9babbbcbdbec0c1c2c6c7c8c9cbcccdd2d3d4d5d6d9dbe0e2e4e5e7ebecf0f2f4f5f6f7f9fbfcfdff,50:000102030405060708090a#0b0e1011131516171b1d1e20222324272b2f303132333435363738393b3d3f404142444546494a4b4d5051525354565758595b5d5e5f6061626364666768696a6b6d6e6f70717273747578797a7c7d818283848687898a8b8c8e8f909192939495969798999a9b9c9d9e9fa0a1a2a4a6aaabadaeafb0b1b3b4b5b6b7b8b9bcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdced0d1d2d3d4d5d7d8d9dbdcdddedfe0e1e2e3e4e5e8e9eaebeff0f1f2f4f6f7f8f9fafcfdfeff,51:00010203040508#090a0c0d0e0f1011131415161718191a1b1c1d1e1f2022232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e42474a4c4e4f5052535758595b5d5e5f606163646667696a6f727a7e7f838486878a8b8e8f90919394989a9d9e9fa1a3a6a7a8a9aaadaeb4b8b9babebfc1c2c3c5c8cacdced0d2d3d4d5d6d7d8d9dadcdedfe2e3e5e6e7e8e9eaeceef1f2f4f7fe,52:0405090b0c0f101314151c1e1f2122232526272a2c2f313234353c3e4445464748494b4e4f5253555758#595a5b5d5f6062636466686b6c6d6e7071737475767778797a7b7c7e808384858687898a8b8c8d8e8f91929495969798999a9ca4a5a6a7aeafb0b4b5b6b7b8b9babbbcbdc0c1c2c4c5c6c8cacccdcecfd1d3d4d5d7d9dadbdcdddee0e1e2e3e5e6e7e8e9eaebecedeeeff1f2f3f4f5f6f7f8fbfcfd,53:0102030407090a0b0c0e11121314181b1c1e1f2224252728292b2c2d2f3031323334353637383c3d404244464b4c4d505458595b5d65686a6c6d7276797b7c7d7e80818387888a8e8f#90919293949697999b9c9ea0a1a4a7aaabacadafb0b1b2b3b4b5b7b8b9babcbdbec0c3c4c5c6c7cecfd0d2d3d5dadcdddee1e2e7f4fafeff,54:000205070b1418191a1c2224252a303336373a3d3f4142444547494c4d4e4f515a5d5e5f6061636567696a6b6c6d6e6f7074797a7e7f8183858788898a8d919397989c9e9fa0a1a2a5aeb0b2b5b6b7b9babcbec3c5cacbd6d8dbe0e1e2e3e4ebeceff0f1f4f5f6f7f8f9fbfe,55:0002030405080a0b0c0d0e121315161718191a1c1d1e1f212526#28292b2d3234353638393a3b3d40424547484b4c4d4e4f515253545758595a5b5d5e5f60626368696b6f7071727374797a7d7f85868c8d8e9092939596979a9b9ea0a1a2a3a4a5a6a8a9aaabacadaeafb0b2b4b6b8babcbfc0c1c2c3c6c7c8cacbcecfd0d5d7d8d9dadbdee0e2e7e9edeef0f1f4f6f8f9fafbfcff,56:0203040506070a0b0d1011121314151617191a1c1d202122252628292a2b2e2f30333537383a3c3d3e404142434445464748494a4b4f5051525355565a5b5d5e5f6061#636566676d6e6f70727374757778797a7d7e7f80818283848788898a8b8c8d9091929495969798999a9b9c9d9e9fa0a1a2a4a5a6a7a8a9aaabacadaeb0b1b2b3b4b5b6b8b9babbbdbebfc0c1c2c3c4c5c6c7c8c9cbcccdcecfd0d1d2d3d5d6d8d9dce3e5e6e7e8e9eaeceeeff2f3f6f7f8fbfc,57:00010205070b0c0d0e0f101112131415161718191a1b1d1e202122242526272b313234353637383c3d3f414344454648494b52535455565859626365676c6e707172747578797a7d7e7f80#818788898a8d8e8f90919495969798999a9c9d9e9fa5a8aaacafb0b1b3b5b6b7b9babbbcbdbebfc0c1c4c5c6c7c8c9cacccdd0d1d3d6d7dbdcdee1e2e3e5e6e7e8e9eaebeceef0f1f2f3f5f6f7fbfcfeff,58:0103040508090a0c0e0f101213141617181a1b1c1d1f222325262728292b2c2d2e2f31323334363738393a3b3c3d3e3f4041424345464748494a4b4e4f505253555657595a5b5c5d5f6061626364666768696a6d6e6f707172737475767778797a7b7c7d7f82848687888a8b8c#8d8e8f909194959697989b9c9da0a1a2a3a4a5a6a7aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbdbebfc0c2c3c4c6c7c8c9cacbcccdcecfd0d2d3d4d6d7d8d9dadbdcdddedfe0e1e2e3e5e6e7e8e9eaedeff1f2f4f5f7f8fafbfcfdfeff,59:000103050608090a0b0c0e1011121317181b1d1e2021222326282c30323335363b3d3e3f404345464a4c4d505253595b5c5d5e5f616364666768696a6b6c6d6e6f70717275777a7b7c7e7f8085898b8c8e8f90919495989a9b9c9d9fa0a1a2a6#a7acadb0b1b3b4b5b6b7b8babcbdbfc0c1c2c3c4c5c7c8c9cccdcecfd5d6d9dbdedfe0e1e2e4e6e7e9eaebedeeeff0f1f2f3f4f5f6f7f8fafcfdfe,5a:00020a0b0d0e0f101214151617191a1b1d1e2122242627282a2b2c2d2e2f3033353738393a3b3d3e3f414243444547484b4c4d4e4f5051525354565758595b5c5d5e5f60616364656668696b6c6d6e6f7071727378797b7c7d7e808182838485868788898a8b8c8d8e8f9091939495969798999c9d9e9fa0a1a2a3a4a5a6a7a8a9abac#adaeafb0b1b4b6b7b9babbbcbdbfc0c3c4c5c6c7c8cacbcdcecfd0d1d3d5d7d9dadbdddedfe2e4e5e7e8eaecedeeeff0f2f3f4f5f6f7f8f9fafbfcfdfeff,5b:0001020304050607080a0b0c0d0e0f10111213141518191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303133353638393a3b3c3d3e3f4142434445464748494a4b4c4d4e4f52565e606167686b6d6e6f7274767778797b7c7e7f82868a8d8e90919294969fa7a8a9acadaeafb1b2b7babbbcc0c1c3c8c9cacbcdcecf#d1d4d5d6d7d8d9dadbdce0e2e3e6e7e9eaebecedeff1f2f3f4f5f6f7fdfe,5c:0002030507080b0c0d0e10121317191b1e1f2021232628292a2b2d2e2f303233353637434446474c4d5253545657585a5b5c5d5f62646768696a6b6c6d70727374757677787b7c7d7e808384858687898a8b8e8f9293959d9e9fa0a1a4a5a6a7a8aaaeafb0b2b4b6b9babbbcbec0c2c3c5c6c7c8c9cacccdcecfd0d1d3d4d5d6d7d8dadbdcdddedfe0e2e3e7e9ebeceeeff1f2f3f4f5f6f7f8f9fafcfdfeff,5d:00#01040508090a0b0c0d0f10111213151718191a1c1d1f2021222325282a2b2c2f3031323335363738393a3b3c3f4041424344454648494d4e4f5051525354555657595a5c5e5f6061626364656667686a6d6e7071727375767778797a7b7c7d7e7f8081838485868788898a8b8c8d8e8f9091929394959697989a9b9c9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b8b9babbbcbdbebfc0c1c2c3c4c6c7c8c9cacbcccecfd0d1d2d3d4d5d6d7d8d9dadcdfe0e3e4eaeced#f0f5f6f8f9fafbfcff,5e:000407090a0b0d0e1213171e1f20212223242528292a2b2c2f303233343536393a3e3f404143464748494a4b4d4e4f50515253565758595a5c5d5f60636465666768696a6b6c6d6e6f70717577797e8182838588898c8d8e92989b9da1a2a3a4a8a9aaabacaeafb0b1b2b4babbbcbdbfc0c1c2c3c4c5c6c7c8cbcccdcecfd0d4d5d7d8d9dadcdddedfe0e1e2e3e4e5e6e7e9ebecedeeeff0f1f2f3f5f8f9fbfcfd,5f:050607090c0d0e10121416191a1c1d1e21222324#282b2c2e30323334353637383b3d3e3f4142434445464748494a4b4c4d4e4f5154595a5b5c5e5f60636567686b6e6f72747576787a7d7e7f83868d8e8f919394969a9b9d9e9fa0a2a3a4a5a6a7a9abacafb0b1b2b3b4b6b8b9babbbebfc0c1c2c7c8cacbced3d4d5dadbdcdedfe2e3e5e6e8e9eceff0f2f3f4f6f7f9fafc,60:0708090b0c10111317181a1e1f2223242c2d2e3031323334363738393a3d3e404445464748494a4c4e4f5153545657585b5c5e5f606165666e71727475777e80#8182858687888a8b8e8f909193959798999c9ea1a2a4a5a7a9aaaeb0b3b5b6b7b9babdbebfc0c1c2c3c4c7c8c9cccdcecfd0d2d3d4d6d7d9dbdee1e2e3e4e5eaf1f2f5f7f8fbfcfdfeff,61:02030405070a0b0c1011121314161718191b1c1d1e21222528292a2c2d2e2f303132333435363738393a3b3c3d3e4041424344454647494b4d4f50525354565758595a5b5c5e5f606163646566696a6b6c6d6e6f717273747678797a7b7c7d7e7f808182838485868788898a8c8d8f9091929395#969798999a9b9c9e9fa0a1a2a3a4a5a6aaabadaeafb0b1b2b3b4b5b6b8b9babbbcbdbfc0c1c3c4c5c6c7c9cccdcecfd0d3d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e7e8e9eaebecedeeeff0f1f2f3f4f6f7f8f9fafbfcfdfe,62:00010203040507091314191c1d1e2023262728292b2d2f303132353638393a3b3c424445464a4f50555657595a5c5d5e5f6061626465687172747577787a7b7d818283858687888b8c8d8e8f9094999c9d9ea3a6a7a9aaadaeafb0b2b3b4b6b7b8babec0c1#c3cbcfd1d5dddee0e1e4eaebf0f2f5f8f9fafb,63:00030405060a0b0c0d0f10121314151718191c2627292c2d2e30313334353637383b3c3e3f40414447484a51525354565758595a5b5c5d60646566686a6b6c6f707273747578797c7d7e7f81838485868b8d9193949597999a9b9c9d9e9fa1a4a6abafb1b2b5b6b9bbbdbfc0c1c2c3c5c7c8cacbccd1d3d4d5d7d8d9dadbdcdddfe2e4e5e6e7e8ebeceeeff0f1f3f5f7f9fafbfcfe,64:0304060708090a0d0e111215161718191a1d1f222324#252728292b2e2f3031323335363738393b3c3e404243494b4c4d4e4f505153555657595a5b5c5d5f60616263646566686a6b6c6e6f70717273747576777b7c7d7e7f8081838688898a8b8c8d8e8f90939497989a9b9c9d9fa0a1a2a3a5a6a7a8aaabafb1b2b3b4b6b9bbbdbebfc1c3c4c6c7c8c9cacbcccfd1d3d4d5d6d9dadbdcdddfe0e1e3e5e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,65:01020304050607080a0b0c0d0e0f10111314151617191a1b1c1d1e1f2021#222324262728292a2c2d30313233373a3c3d404142434446474a4b4d4e5052535457585a5c5f606164656768696a6d6e6f7173757678797a7b7c7d7e7f8081828384858688898a8d8e8f92949596989a9d9ea0a2a3a6a8aaacaeb1b2b3b4b5b6b7b8babbbebfc0c2c7c8c9cacdd0d1d3d4d5d8d9dadbdcdddedfe1e3e4eaebf2f3f4f5f8f9fbfcfdfeff,66:0104050708090b0d1011121617181a1b1c1e2122232426292a2b2c2e3032333738393a3b3d3f40424445464748494a4d4e505158#595b5c5d5e6062636567696a6b6c6d7172737578797b7c7d7f808183858688898a8b8d8e8f909293949598999a9b9c9e9fa0a1a2a3a4a5a6a9aaabacadafb0b1b2b3b5b6b7b8babbbcbdbfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8dadedfe0e1e2e3e4e5e7e8eaebecedeeeff1f5f6f8fafbfd,67:010203040506070c0e0f1112131618191a1c1e20212223242527292e303233363738393b3c3e3f414445474a4b4d5254555758595a5b5d62636466676b6c6e717476#78797a7b7d8082838586888a8c8d8e8f9192939496999b9fa0a1a4a6a9acaeb1b2b4b9babbbcbdbebfc0c2c5c6c7c8c9cacbcccdced5d6d7dbdfe1e3e4e6e7e8eaebedeef2f5f6f7f8f9fafbfcfe,68:01020304060d1012141518191a1b1c1e1f20222324252627282b2c2d2e2f30313435363a3b3f474b4d4f52565758595a5b5c5d5e5f6a6c6d6e6f707172737578797a7b7c7d7e7f8082848788898a8b8c8d8e90919294959698999a9b9c9d9e9fa0a1a3a4a5a9aaabacaeb1b2b4b6b7b8#b9babbbcbdbebfc1c3c4c5c6c7c8cacccecfd0d1d3d4d6d7d9dbdcdddedfe1e2e4e5e6e7e8e9eaebecedeff2f3f4f6f7f8fbfdfeff,69:00020304060708090a0c0f11131415161718191a1b1c1d1e21222325262728292a2b2c2e2f313233353637383a3b3c3e4041434445464748494a4b4c4d4e4f50515253555658595b5c5f616264656768696a6c6d6f7072737475767a7b7d7e7f8183858a8b8c8e8f909192939697999a9d9e9fa0a1a2a3a4a5a6a9aaacaeafb0b2b3b5b6b8b9babcbd#bebfc0c2c3c4c5c6c7c8c9cbcdcfd1d2d3d5d6d7d8d9dadcdddee1e2e3e4e5e6e7e8e9eaebeceeeff0f1f3f4f5f6f7f8f9fafbfcfe,6a:000102030405060708090b0c0d0e0f10111213141516191a1b1c1d1e20222324252627292b2c2d2e30323334363738393a3b3c3f40414243454648494a4b4c4d4e4f515253545556575a5c5d5e5f60626364666768696a6b6c6d6e6f70727374757677787a7b7d7e7f81828385868788898a8b8c8d8f929394959698999a9b9c9d9e9fa1a2a3a4a5a6#a7a8aaadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,6b:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f252628292a2b2c2d2e2f303133343536383b3c3d3f4041424445484a4b4d4e4f5051525354555657585a5b5c5d5e5f606168696b6c6d6e6f7071727374757677787a7d7e7f808588#8c8e8f909194959798999c9d9e9fa0a2a3a4a5a6a7a8a9abacadaeafb0b1b2b6b8b9babbbcbdbec0c3c4c6c7c8c9caccced0d1d8dadcdddedfe0e2e3e4e5e6e7e8e9ecedeef0f1f2f4f6f7f8fafbfcfeff,6c:000102030408090a0b0c0e12171c1d1e2023252b2c2d31333637393a3b3c3e3f434445484b4c4d4e4f5152535658595a62636566676b6c6d6e6f71737577787a7b7c7f8084878a8b8d8e9192959697989a9c9d9ea0a2a8acafb0b4b5b6b7bac0c1c2c3c6c7c8cbcdcecfd1d2d8#d9dadcdddfe4e6e7e9ecedf2f4f9ff,6d:000203050608090a0d0f101113141516181c1d1f20212223242628292c2d2f30343637383a3f404244494c50555657585b5d5f6162646567686b6c6d707172737576797a7b7d7e7f8081838486878a8b8d8f9092969798999a9ca2a5acadb0b1b3b4b6b7b9babbbcbdbec1c2c3c8c9cacdcecfd0d2d3d4d5d7dadbdcdfe2e3e5e7e8e9eaedeff0f2f4f5f6f8fafdfeff,6e:0001020304060708090b0f12131518191b1c1e1f222627282a2c2e30313335#3637393b3c3d3e3f40414245464748494a4b4c4f5051525557595a5c5d5e606162636465666768696a6c6d6f707172737475767778797a7b7c7d8081828487888a8b8c8d8e91929394959697999a9b9d9ea0a1a3a4a6a8a9abacadaeb0b3b5b8b9bcbebfc0c3c4c5c6c8c9cacccdced0d2d6d8d9dbdcdde3e7eaebecedeeeff0f1f2f3f5f6f7f8fafbfcfdfeff,6f:000103040507080a0b0c0d0e101112161718191a1b1c1d1e1f212223252627282c2e303234353738393a3b3c3d3f404142#43444548494a4c4e4f5051525354555657595a5b5d5f60616364656768696a6b6c6f707173757677797b7d7e7f808182838586878a8b8f909192939495969798999a9b9d9e9fa0a2a3a4a5a6a8a9aaabacadaeafb0b1b2b4b5b7b8babbbcbdbebfc1c3c4c5c6c7c8cacbcccdcecfd0d3d4d5d6d7d8d9dadbdcdddfe2e3e4e5e6e7e8e9eaebecedf0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,70:000102030405060708090a0b0c0d0e0f1012131415161718191c1d1e1f2021222425262728292a#2b2c2d2e2f30313233343637383a3b3c3d3e3f404142434445464748494a4b4d4e505152535455565758595a5b5c5d5f606162636465666768696a6e7172737477797a7b7d818283848687888b8c8d8f90919397989a9b9e9fa0a1a2a3a4a5a6a7a8a9aab0b2b4b5b6babebfc4c5c6c7c9cbcccdcecfd0d1d2d3d4d5d6d7dadcdddee0e1e2e3e5eaeef0f1f2f3f4f5f6f8fafbfcfeff,71:0001020304050607080b0c0d0e0f111214171b1c1d1e1f2021222324252728292a2b2c2d2e323334#353738393a3b3c3d3e3f4041424344464748494b4d4f505152535455565758595a5b5d5f6061626365696a6b6c6d6f707174757677797b7c7e7f8081828385868788898b8c8d8e909192939596979a9b9c9d9ea1a2a3a4a5a6a7a9aaabadaeafb0b1b2b4b6b7b8babbbcbdbebfc0c1c2c4c5c6c7c8c9cacbcccdcfd0d1d2d3d6d7d8d9dadbdcdddedfe1e2e3e4e6e8e9eaebecedeff0f1f2f3f4f5f6f7f8fafbfcfdfeff,72:0001020304050708090a0b0c0d0e0f101112131415161718191a#1b1c1e1f2021222324252627292b2d2e2f3233343a3c3e40414243444546494a4b4e4f505153545557585a5c5e60636465686a6b6c6d707173747677787b7c7d828385868788898c8e9091939495969798999a9b9c9d9ea0a1a2a3a4a5a6a7a8a9aaabaeb1b2b3b5babbbcbdbebfc0c5c6c7c9cacbcccfd1d3d4d5d6d8dadb#95$,30:000102,00b702:c9c7,00a830:0305,2014ff5e20:162618191c1d,30:141508090a0b0c0d0e0f16171011,00:b1d7f7,22:362728110f2a2908371aa52520,231222:992b2e614c483d1d606e6f64651e3534,26:4240,00b020:3233,2103ff0400a4ff:e0e1,203000a7211626:0605,25:cbcfcec7c6a1a0b3b2,203b21:92909193,30:13#95$,21:70717273747576777879#4$,24:88898a8b8c8d8e8f909192939495969798999a9b7475767778797a7b7c7d7e7f808182838485868760616263646566676869##,32:20212223242526272829##,21:606162636465666768696a6b#97$,ff:010203e505060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5de3#95$,30:4142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f90919293#106$a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6#103$,03:9192939495969798999a9b9c9d9e9fa0a1a3a4a5a6a7a8a9#6$b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c3c4c5c6c7c8c9#5$,fe:3536393a3f403d3e41424344##3b3c373831#3334#104$,04:10111213141501161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f#13$30313233343551363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f#11$,02:cacbd9,20:13152535,21:050996979899,22:151f23526667bf,25:505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f7071727381828384858687#88898a8b8c8d8e8f939495bcbde2e3e4e5,2609229530:121d1e#9$,010100e101ce00e0011300e9011b00e8012b00ed01d000ec014d00f301d200f2016b00fa01d400f901:d6d8dadc,00:fcea,0251e7c701:4448,e7c802:61#2$,31:05060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223242526272829#19$,30:212223242526272829,32a333:8e8f9c9d9ea1c4ced1d2d5,fe30ff:e2e4#,212132:31#,20:10#1$,30:fc9b9cfdfe069d9e,fe:494a4b4c4d4e4f50515254555657595a5b5c5d5e5f6061#626364656668696a6b,e7:e7e8e9eaebecedeeeff0f1f2f3,30:07#11$,25:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b#13$,72:dcdddfe2e3e4e5e6e7eaebf5f6f9fdfeff,73:00020405060708090b0c0d0f1011121418191a1f2023242627282d2f30323335363a3b3c3d404142434445464748#494a4b4c4e4f515354555658595a5b5c5d5e5f6162636465666768696a6b6e7071#92$72737475767778797a7b7c7d7f808182838586888a8c8d8f90929394959798999a9c9d9ea0a1a3a4a5a6a7a8aaacadb1b4b5b6b8b9bcbdbebfc1c3c4c5c6c7#cbccced2d3d4d5d6d7d8dadbdcdddfe1e2e3e4e6e8eaebeceeeff0f1f3f4f5f6f7#92$f8f9fafbfcfdfeff,74:0001020407080b0c0d0e1112131415161718191c1d1e1f2021232427292b2d2f31323738393a3b3d3e3f4042434445464748494a4b4c4d#4e4f505152535456585d606162636465666768696a6b6c6e6f717273747578797a#92$7b7c7d7f8284858688898a8c8d8f9192939495969798999a9b9d9fa0a1a2a3a4a5a6aaabacadaeafb0b1b2b3b4b5b6b7b8b9bbbcbdbebfc0c1c2c3c4c5c6c7#c8c9cacbcccdcecfd0d1d3d4d5d6d7d8d9dadbdddfe1e5e7e8e9eaebecedf0f1f2#92$f3f5f8f9fafbfcfdfe,75:0001020305060708090a0b0c0e1012141516171b1d1e202122232426272a2e3436393c3d3f414243444647494a4d5051525355565758#5d5e5f60616263646768696b6c6d6e6f7071737576777a7b7c7d7e808182848587#92$88898a8c8d8e909395989b9c9ea2a6a7a8a9aaadb6b7babbbfc0c1c6cbcccecfd0d1d3d7d9dadcdddfe0e1e5e9ecedeeeff2f3f5f6f7f8fafbfdfe,76:02040607#08090b0d0e0f11121314161a1c1d1e212327282c2e2f31323637393a3b3d414244#92$45464748494a4b4e4f50515253555758595a5b5d5f6061626465666768696a6c6d6e7071727374757677797a7c7f80818385898a8c8d8f9092949597989a9b#9c9d9e9fa0a1a2a3a5a6a7a8a9aaabacadafb0b3b5b6b7b8b9babbbcbdbec0c1c3,554a963f57c3632854ce550954c076:914c,853c77ee827e788d72319698978d6c285b894ffa630966975cb880fa684880ae660276ce51f9655671ac7ff1888450b2596561ca6fb382ad634c625253ed54277b06516b75a45df462d48dcb9776628a8019575d97387f627238767d67cf767e64464f708d2562dc7a17659173ed642c6273822c9881677f724862:6ecc,4f3474e3534a529e7eca90a65e2e6886699c81807ed168d278c5868c9551508d8c2482de80de53058912526576:c4c7c9cbccd3d5d9dadcdddee0e1e2e3e4e6e7e8e9eaebecedf0f3f5f6f7fafbfdff,77:00020305060a0c0e0f1011121314151617181b1c1d1e21232425272a2b#2c2e3031323334393b3d3e3f4244454648494a4b4c4d4e4f52535455565758595c,858496f94fdd582199715b9d62:b1a5,66b48c799c8d7206676f789160b253:5117,8f8880cc8d1d94a1500d72c8590760eb711988ab595482ef672c7b285d297ef7752d6cf58e668ff8903c9f3b6bd491197b145f7c78a784d6853d6b:d5d9d6,5e:0187,75f995ed655d5f:0ac5,8f9f58c181c2907f965b97ad8fb97f168d2c62414fbf53:d85e,8f:a8a9ab,904d68075f6a819888689cd6618b522b762a5f6c658c6fd26ee85bbe644851:75b0,67c44e1979c9997c70b377:5d5e5f606467696a6d6e6f7071727374757677787a7b7c818283868788898a8b8f90939495969798999a9b9c9d9ea1a3a4a6a8abadaeafb1b2b4b6b7b8b9ba#bcbec0c1c2c3c4c5c6c7c8c9cacbcccecfd0d1d2d3d4d5d6d8d9dadddedfe0e1e4,75c55e7673bb83e064ad62e894b56ce2535a52c3640f94c27b944f2f5e1b823681:168a,6e246cca9a736355535c54fa886557e04e0d5e036b657c3f90e8601664e6731c88c16750624d8d22776c8e2991c75f6983dc8521991053c286956b8b60:ede8,707f82:cd31,4ed36ca785cf64cd7cd969fd66f9834953957b564fa7518c6d4b5c428e6d63d253c983:2c36,67e578b4643d5bdf5c945dee8be762c667f48c7a640063ba8749998b8c177f2094f24ea7961098a4660c731677:e6e8eaeff0f1f2f4f5f7f9fafbfc,78:0304050607080a0b0e0f101315191b1e20212224282a2b2e2f31323335363d3f414243444648494a4b4d4f51535458595a#5b5c5e5f606162636465666768696f7071727374757678797a7b7d7e7f80818283,573a5c1d5e38957f507f80a05382655e7545553150218d856284949e671d56326f6e5de2543570928f66626f64a463a35f7b6f8890f481e38fb05c1866685ff16c8996488d81886c649179f057ce6a59621054484e587a0b60e96f848bda627f901e9a8b79e4540375f4630153196c608fdf5f1b9a70803b9f7f4f885c3a8d647fc565a570bd51:45b2,866b5d075ba062bd916c75748e0c7a2061017b794ec77ef877854e1181ed521d51fa6a7153a88e87950496cf6ec19664695a78:848586888a8b8f9092949596999d9ea0a2a4a6a8a9aaabacadaeafb5b6b7b8babbbcbdbfc0c2c3c4c6c7c8cccdcecfd1d2d3d6d7d8dadbdcdddedfe0e1e2e3#e4e5e6e7e9eaebedeeeff0f1f3f5f6f8f9fbfcfdfeff,79:00020304060708090a0b0c,784050a877d7641089e6590463e35ddd7a7f693d4f20823955984e3275ae7a975e:628a,95ef521b5439708a6376952457826625693f918755076df37eaf882262337ef075b5832878c196cc8f9e614874f78bcd6b64523a8d506b21806a847156f153064e:ce1b,51d17c97918b7c074fc38e7f7be17a9c64675d1450ac810676017cb96dec7fe067515b:58f8,78cb64:ae13,63:aa2b,9519642d8fbe7b5476296253592754466b7950a362345e266b864ee38d37888b5f85902e79:0d0e0f1011121415161718191a1b1c1d1f2021222325262728292a2b2c2d2e2f3031323335363738393d3f42434445474a4b4c4d4e4f505152545558596163#6466696a6b6c6e70717273747576797b7c7d7e7f8283868788898b8c8d8e909192,6020803d62c54e39535590f863b880c665e66c2e4f4660ee6de18bde5f3986cb5f536321515a83616863520063638e4850125c9b79775bfc52307a3b60bc905376d75f:b797,76848e6c706f767b7b4977aa51f3909358244f4e6ef48fea654c7b1b72c46da47fdf5ae162b55e95573084827b2c5e1d5f1f90127f1498a063826ec7789870b95178975b57ab75354f4375385e9760e659606dc06bbf788953fc96d551cb52016389540a94938c038dcc7239789f87768fed8c0d53e079:939495969798999b9c9d9e9fa0a1a2a3a4a5a6a8a9aaabacadaeafb0b1b2b4b5b6b7b8bcbfc2c4c5c7c8cacccecfd0d3d4d6d7d9dadbdcdddee0e1e2e5e8ea#eceef1f2f3f4f5f6f7f9fafcfeff,7a:0104050708090a0c0f10111213151618191b1c,4e0176ef53ee948998769f0e952d5b9a8ba24e:221c,51ac846361c252a8680b4f97606b51bb6d1e515c6296659796618c46901775d890fd77636bd272:8aec,8bfb583577798d4c675c9540809a5ea66e2159927aef77ed953b6bb565ad7f0e58065151961f5bf958a954288e726566987f56e4949d76fe9041638754c659:1a3a,579b8eb267358dfa8235524160f0581586fe5ce89e454fc4989d8bb95a2560765384627c904f9102997f6069800c513f80335c1499756d314e8c7a:1d1f21222425262728292a2b2c2d2e2f303132343536383a3e4041424344454748494a4b4c4d4e4f50525354555658595a5b5c5d5e5f606162636465666768#696a6b6c6d6e6f717273757b7c7d7e828587898a8b8c8e8f909394999a9b9ea1a2,8d3053d17f5a7b4f4f104e4f96006cd573d085e95e06756a7ffb6a0a77fe94927e4151e170e653cd8fd483038d2972af996d6cdb574a82b365b980aa623f963259a84eff8bbf7eba653e83f2975e556198de80a5532a8bfd542080ba5e9f6cb88d3982ac915a54296c1b52067eb7575f711a6c7e7c89594b4efd5fff61247caa4e305c0167ab87025cf0950b98ce75af70fd902251af7f1d8bbd594951e44f5b5426592b657780a45b7562:76c2,8f905e456c1f7b264f:0fd8,670d7a:a3a4a7a9aaabaeafb0b1b2b4b5b6b7b8b9babbbcbdbec0c1c2c3c4c5c6c7c8c9cacccdcecfd0d1d2d3d4d5d7d8dadbdcdde1e2e4e7e8e9eaebeceef0f1f2f3#f4f5f6f7f8fbfcfe,7b:0001020507090c0d0e1012131617181a1c1d1f21222327292d,6d:6eaa,798f88b15f17752b629a8f854fef91dc65a781:2f51,5e9c81508d74526f89868d4b590d50854ed8961c723681798d1f5bcc8ba3964459877f1a549056:760e,8be565396982949976d66e895e72751867:46d1,7aff809d8d76611f79c665628d635188521a94a27f38809b7eb25c976e2f67607bd9768b9ad8818f7f947cd5641e95507a3f54:4ae5,6b4c640162089e3d80f3759952729769845b683c86e496:0194,94ec4e2a54047ed968398ddf801566f45e9a7fb97b:2f303234353637393b3d3f404142434446484a4d4e535557595c5e5f61636465666768696a6b6c6d6f70737476787a7c7d7f81828384868788898a8b8c8e8f#9192939698999a9b9e9fa0a3a4a5aeafb0b2b3b5b6b7b9babbbcbdbebfc0c2c3c4,57c2803f68975de5653b529f606d9f9a4f9b8eac516c5bab5f135de96c5e62f18d21517194a952fe6c9f82df72d757a267848d2d591f8f9c83c754957b8d4f306cbd5b6459d19f1353e486ca9aa88c3780a16545987e56fa96c7522e74dc52505be1630289024e5662d0602a68fa51735b9851a089c27ba199867f5060ef704c8d2f51495e7f901b747089c4572d78455f529f9f95fa8f689b3c8be17678684267dc8d:ea35,523d8f8a6eda68cd950590ed56fd679c88f98fc754c87b:c5c8c9cacbcdcecfd0d2d4d5d6d7d8dbdcdedfe0e2e3e4e7e8e9ebecedeff0f2f3f4f5f6f8f9fafbfdff,7c:0001020304050608090a0d0e101112131415171819#1a1b1c1d1e20212223242528292b2c2d2e2f3031323334353637393a3b3c3d3e42,9ab85b696d776c264ea55bb39a87916361a890af97e9542b6db55bd251fd558a7f:55f0,64bc634d65f161be608d710a6c:5749,592f676d822a58d5568e8c6a6beb90dd597d801753f76d695475559d83:77cf,683879be548c4f55540876d28c8996026cb36db88d6b89109e648d3a563f9ed175d55f8872e0606854fc4ea86a2a886160528f7054c470d886799e3f6d2a5b8f5f187ea255894faf7334543c539a501954:0e7c,4e4e5ffd745a58f6846b80e1877472d07cca6e567c:434445464748494a4b4c4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f70717275767778797a7e7f8081828384858687#888a8b8c8d8e8f90939496999a9ba0a1a3a6a7a8a9abacadafb0b4b5b6b7b8babb,5f27864e552c62a44e926caa623782b154d7534e733e6ed1753b521253168bdd69d05f8a60006dee574f6b2273af68538fd87f13636260a3552475ea8c6271156da35ba65e7b8352614c9ec478fa87577c27768751f060f6714c66435e4c604d8c0e707063258f895fbd606286d456de6bc160946167534960e066668d3f79fd4f1a70e96c478b:b3f2,7ed88364660f5a5a9b426d:51f7,8c416d3b4f19706b83b7621660d1970d8d27797851fb57:3efa,673a75787a3d79ef7b957c:bfc0c2c3c4c6c9cbcecfd0d1d2d3d4d8dadbdddee1e2e3e4e5e6e7e9eaebecedeef0f1f2f3f4f5f6f7f9fafcfdfeff,7d:000102030405060708090b0c0d0e0f10#1112131415161718191a1b1c1d1e1f212324252628292a2c2d2e30313233343536,808c99658ff96fc08ba59e2159ec7ee97f095409678168d88f917c4d96c653ca602575be6c7253735ac97ea7632451e0810a5df184df628051805b634f0e796d524260b86d4e5b:c4c2,8b:a1b0,65e25fcc964559937e:e7aa,560967b759394f735bb652a0835a988a8d3e753294be50477a3c4ef767b69a7e5ac16b7c76d1575a5c167b3a95f4714e517c80a9827059787f04832768c067ec78:b177,62e363617b804fed526a51cf835069db92748d:f531,89c1952e7bad4ef67d:3738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6f70717273747576#78797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798,506582305251996f6e:1085,6da75efa50f559dc5c066d466c5f7586848b686859568bb253209171964d854969127901712680f64ea490ca6d479a845a0756bc640594f077eb4fa5811a72e189d2997a7f347ede527f655991758f:7f83,53eb7a9663:eda5,768679f888579636622a52ab8282685467706377776b7aed6d017ed389e359d0621285c982a5754c501f4ecb75a58beb5c4a5dfe7b4b65a491d14eca6d25895f7d2795264ec58c288fdb9773664b79818fd170ec6d787d:999a9b9c9d9e9fa0a1a2a3a4a5a7a8a9aaabacadafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9#dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fa,5c3d52b283465162830e775b66769cb84eac60ca7c:beb3,7ecf4e958b66666f988897595883656c955c5f8475c997567a:dfde,51c070af7a9863ea7a767ea0739697ed4e4570784e5d915253a965:51e7,81fc8205548e5c31759a97a062d872d975bd5c459a7983ca5c40548077e94e3e6cae805a62d2636e5de851778ddd8e1e952f4ff153e560e770ac526763509e435a1f5026773753777ee26485652b628963985014723589c951b38bc07edd574783cc94a7519b541b5cfb7d:fbfcfdfeff,7e:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f30313233343536373839#3a3c3d3e3f40424344454648494a4b4c4d4e4f505152535455565758595a5b5c5d,4fca7ae36d5a90e19a8f55805496536154af5f0063e9697751ef6168520a582a52d8574e780d770b5eb761777ce062:5b97,4ea27095800362f770e49760577782db67ef68f578d5989779d158f354b353ef6e34514b523b5ba28bfe80af554357a660735751542d7a7a60505b5463a762a053e362635bc767af54ed7a9f82e691775e9388e4593857ae630e8de880ef57577b774fa95feb5bbd6b3e53217b5072c2684677:ff36,65f751b54e8f76d45cbf7aa58475594e9b4150807e:5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f8081838485868788898a8b8c8d8e8f909192939495969798999a9c9d9e#aeb4bbbcd6e4ecf9,7f:0a101e37393b3c3d3e3f404143464748494a4b4c4d4e4f5253,998861276e8357646606634656f062:ec69,5ed39614578362c955878721814a8fa3556683b167658d5684dd5a6a680f62e67bee961151706f9c8c3063fd89c861d27f0670c26ee57405699472fc5eca90ce67176d6a635e52b3726280014f6c59e5916a70d96d9d52d24e5096f7956d857e78ca7d2f5121579264c2808b7c7b6cea68f1695e51b7539868a872819ece7bf172f879bb6f137406674e91cc9ca4793c83:8954,540f68174e3d538952b1783e5386522950884f:8bd0,7f:56595b5c5d5e6063646566676b6c6d6f7073757677787a7b7c7d7f8082838485868788898b8d8f9091929395969798999b9ca0a2a3a5a6a8a9aaabacadaeb1#b3b4b5b6b7babbbec0c2c3c4c6c7c8c9cbcdcfd0d1d2d3d6d7d9dadbdcdddee2e3,75e27acb7c926ca596b6529b748354e94fe9805483b28fde95705ec9601c6d9f5e18655b813894fe604b70bc7ec37cae51c968817cb1826f4e248f8691cf667e4eae8c0564a9804a50da759771ce5be58fbd6f664e86648295635ed66599521788c270c852a3730e7433679778f797164e3490bb9cde6dcb51db8d41541d62ce73b283f196f69f8494c34f367f9a51cc707596755cad988653e64ee46e9c740969b4786b998f7559521876246d4167f3516d9f99804b54997b3c7abf7f:e4e7e8eaebecedeff2f4f5f6f7f8f9fafdfeff,80:020708090a0e0f11131a1b1d1e1f2123242b2c2d2e2f303234393a3c3e404144454748494e4f505153555657#595b5c5d5e5f6061626364656667686b6c6d6e6f7072737475767778797a7b7c7d,9686578462e29647697c5a0464027bd36f0f964b82a6536298855e90708963b35364864f9c819e93788c97328d:ef42,9e7f6f5e79845f559646622e9a74541594dd4fa365c55c:6561,7f1586516c2f5f8b73876ee47eff5ce6631b5b6a6ee653754e7163a0756562a18f6e4f264ed16ca67eb68bba841d87ba7f57903b95237ba99aa188f8843d6d1b9a867edc59889ebb739b780186829a:6c82,561b541757cb4e709ea653568fc881097792999286ee6ee1851366fc61626f2b80:7e818285888a8d8e8f909192949597999ea3a6a7a8acb0b3b5b6b8b9bbc5c7c8c9cacbcfd0d1d2d3d4d5d8dfe0e2e3e6eef5f7f9fbfeff,81:000103040507080b#0c1517191b1c1d1f202122232425262728292a2b2d2e3033343537393a3b3c3d3f,8c298292832b76f26c135fd983bd732b8305951a6bdb77db94c6536f830251925e3d8c8c8d384e4873ab679a68859176970971646ca177095a9295416bcf7f8e66275bd059b95a9a95:e8f7,4eec84:0c99,6aac76df9530731b68a65b5f772f919a97617cdc8ff78c1c5f257c7379d889c56ccc871c5bc65e4268c977207ef551:954d,52c95a297f05976282d763cf778485d079d26e3a5e9959998511706d6c1162bf76bf654f60af95fd660e879f9e2394ed54:0d7d,8c2c647881:40414243444547494d4e4f525657585b5c5d5e5f6162636466686a6b6c6f727375767778818384858687898b8c8d8e90929394959697999a9e9fa0a1a2a4a5#a7a9abacadaeafb0b1b2b4b5b6b7b8b9bcbdbebfc4c5c7c8c9cbcdcecfd0d1d2d3,647986116a21819c78e864699b5462b9672b83ab58a89ed86cab6f205bde964c8c0b725f67d062c772614ea959c66bcd589366ae5e5552df6155672876ee776672677a4662ff54:ea50,94a090a35a1c7eb36c164e435976801059485357753796be56ca63208111607c95f96dd65462998151855ae980fd59ae9713502a6ce55c3c62df4f60533f817b90066eba852b62c85e7478be64b5637b5ff55a18917f9e1f5c3f634f80425b7d556e95:4a4d,6d8560a867e072de51dd5b8181:d4d5d6d7d8d9dadbdcdddedfe0e1e2e4e5e6e8e9ebeeeff0f1f2f5f6f7f8f9fafdff,82:030708090a0b0e0f111315161718191a1d2024252627292e323a3c3d3f#404142434546484a4c4d4e5051525354555657595b5c5d5e606162636465666769,62e76cde725b626d94ae7ebd81136d53519c5f04597452aa6012597366968650759f632a61e67cef8bfa54e66b279e256bb485d5545550766ca4556a8db4722c5e156015743662cd6392724c5f986e436d3e65006f5876d878d076fc7554522453db4e535e9e65c180:2ad6,629b5486522870ae888d8dd16ce1547880da57f988f48d54966a914d4f696c9b55b776c6783062a870f96f8e5f6d84ec68da787c7bf781a8670b9e4f636778b0576f7812973962:79ab,528874356bd782:6a6b6c6d71757677787b7c808183858687898c90939495969a9b9ea0a2a3a7b2b5b6babbbcbfc0c2c3c5c6c9d0d6d9dadde2e7e8e9eaecedeef0f2f3f5f6f8#fafcfdfeff,83:000a0b0d1012131618191d1e1f20212223242526292a2e3032373b3d,5564813e75b276ae533975de50fb5c418b6c7bc7504f72479a9798d86f0274e27968648777a562fc98918d2b54c180584e52576a82f9840d5e7351ed74f68bc45c4f57616cfc98875a4678349b448feb7c955256625194fa4ec68386846183e984b257d467345703666e6d668c3166dd7011671f6b3a6816621a59bb4e0351c46f0667d26c8f517668cb59476b6775665d0e81109f5065d779:4841,9a918d775c824e5e4f01542f5951780c56686c148fc45f036c:7de3,8bab639083:3e3f41424445484a4b4c4d4e5355565758595d6270717273747576797a7e7f808182838487888a8b8c8d8f909194959697999a9d9fa1a2a3a4a5a6a7acadae#afb5bbbebfc2c3c4c6c8c9cbcdced0d1d2d3d5d7d9dadbdee2e3e4e6e7e8ebeced,60706d3d7275626694:8ec5,53438fc17b7e4edf8c264e7e9ed494:b1b3,524d6f5c90636d458c3458115d4c6b:2049,67aa545b81547f8c589985375f3a62a26a47953965726084686577a74e544fa85de7979864ac7fd85ced4fcf7a8d520783044e14602f7a8394a64fb54eb279e6743452e482b964d279bd5bdd6c8197528f7b6c22503e537f6e0564ce66746c3060c598778bf75e86743c7a7779cb4e1890b174036c4256da914b6cc58d8b533a86c666f28eaf5c489a716e2083:eeeff3f4f5f6f7fafbfcfeff,84:0002050708090a10121314151617191a1b1e1f20212223292a2b2c2d2e2f30323334353637393a3b3e3f404142434445474849#4a4b4c4d4e4f505253545556585d5e5f606264656667686a6e6f70727477797b7c,53d65a369f8b8da353bb570898a76743919b6cc9516875ca62f372ac52:389d,7f3a7094763853749e4a69b7786e96c088d97fa471:36c3,518967d374e458e4651856b78ba9997662707ed560f970ed58ec4e:c1ba,5fcd97e74efb8ba45203598a7eab62544ecd65e5620e833884c98363878d71946eb65bb97ed2519763c967d480898339881551125b7a59828fb14e736c5d516589258f6f962e854a745e95:10f0,6da682e55f3164926d128428816e9cc3585e8d5b4e0953c184:7d7e7f8081838485868a8d8f90919293949596989a9b9d9e9fa0a2a3a4a5a6a7a8a9aaabacadaeb0b1b3b5b6b7bbbcbec0c2c3c5c6c7c8cbcccecfd2d4d5d7#d8d9dadbdcdee1e2e4e7e8e9eaebedeeeff1f2f3f4f5f6f7f8f9fafbfdfe,85:000102,4f1e6563685155d34e2764149a9a626b5ac2745f82726da968ee50e7838e7802674052396c997eb150bb5565715e7b5b665273ca82eb67495c715220717d886b95ea965564c58d6181b355846c5562477f2e58924f2455468d4f664c4e0a5c1a88f368a2634e7a0d70e7828d52fa97f65c1154e890b57ecd59628d4a86c782:0c0d,8d6664445c0461516d89793e8bbe78377533547b4f388eab6df15a207ec5795e6c885ba15a76751a80be614e6e1758f075:1f25,727253477ef385:030405060708090a0b0d0e0f101214151618191b1c1d1e2022232425262728292a2d2e2f303132333435363e3f404142444546474b4c4d4e4f505152535455#57585a5b5c5d5f60616263656667696a6b6c6d6e6f707173757677787c7d7f8081,770176db526980dc57235e08593172ee65bd6e7f8bd75c388671534177f362fe65f64ec098df86805b9e8bc653f277e24f7f5c4e9a7659cb5f0f793a58eb4e1667ff4e8b62ed8a93901d52bf662f55dc566c90024ed54f8d91ca99706c0f5e0260435ba489c68bd56536624b99965b:88ff,6388552e53d77626517d852c67a268b36b8a62928f9353d482126dd1758f4e668d4e5b70719f85af66:91d9,7f7287009ecd9f205c5e672f8ff06811675f620d7ad658855eb665706f3185:82838688898a8b8c8d8e909192939495969798999a9d9e9fa0a1a2a3a5a6a7a9abacadb1b2b3b4b5b6b8babbbcbdbebfc0c2c3c4c5c6c7c8cacbcccdced1d2#d4d6d7d8d9dadbdddedfe0e1e2e3e5e6e7e8eaebecedeeeff0f1f2f3f4f5f6f7f8,60555237800d6454887075295e05681362f4971c53cc723d8c016c3477617a0e542e77ac987a821c8bf47855671470c165af64955636601d79c153f84e1d6b7b80865bfa55e356db4f:3a3c,99725df3677e80386002988290015b8b8b:bcf5,641c825864de55fd82cf91654fd77d20901f7c9f50f358516eaf5bbf8bc980839178849c7b97867d96:8b8f,7ee59ad3788e5c817a57904296a7795f5b59635f7b0b84d168ad55067f2974107d2295016240584c4ed65b835979585485:f9fafcfdfe,86:0001020304060708090a0b0c0d0e0f10121314151718191a1b1c1d1e1f20212223242526282a2b2c2d2e2f3031323334353637393a3b3d3e3f40#4142434445464748494a4b4c525355565758595b5c5d5f6061636465666768696a,736d631e8e:4b0f,80ce82d462ac53f06cf0915e592a60016c70574d644a8d2a762b6ee9575b6a8075f06f6d8c:2d08,57666bef889278b363a253f970ad6c645858642a580268e0819b55107cd650188eba6dcc8d9f70eb638f6d9b6ed47ee68404684390036dd896768ba85957727985e4817e75bc8a8a68af52548e22951163d098988e44557c4f5366ff568f60d56d9552435c4959296dfb586b75:301c,606c82148146631167618fe2773a8d:f334,94c15e165385542c70c386:6d6f7072737475767778838485868788898e8f90919294969798999a9b9e9fa0a1a2a5a6abadaeb2b3b7b8b9bbbcbdbebfc1c2c3c5c8cccdd2d3d5d6d7dadc#dde0e1e2e3e5e6e7e8eaebeceff5f6f7fafbfcfdff,87:010405060b0c0e0f10111416,6c405ef7505c4ead5ead633a8247901a6850916e77b3540c94dc5f647ae5687663457b527edf75db507762955934900f51f879c37a8156fe5f9290146d825c60571f541051546e4d56e263a89893817f8715892a9000541e5c6f81c062:d658,81319e3596409a:6e7c,692d59a562d3553e631654c786d96d3c5a0374e6889c6b6a59168c4c5f2f6e7e73a9987d4e3870f75b8c7897633d665a769660cb5b9b5a494e0781556c6a738b4ea167897f515f8065fa671b5fd859845a0187:191b1d1f20242627282a2b2c2d2f303233353638393a3c3d404142434445464a4b4d4f505152545556585a5b5c5d5e5f6162666768696a6b6c6d6f71727375#7778797a7f8081848687898a8c8e8f90919294959698999a9b9c9d9ea0a1a2a3a4,5dcd5fae537197e68fdd684556f4552f60df4e3a6f4d7ef482c7840e59d44f:1f2a,5c3e7eac672a851a5473754f80c355829b4f4f4d6e2d8c135c096170536b761f6e29868a658795fb7eb9543b7a337d0a95ee55e17fc174ee631d87176da17a9d621165a1536763e16c835deb545c94a84e4c6c618bec5c4b65e0829c68a754:3e34,6b:cb66,4e9463425348821e4f:0dae,575e620a96fe6664726952:ffa1,609f8bef661471996790897f785277fd6670563b54389521727a87:a5a6a7a9aaaeb0b1b2b4b6b7b8b9bbbcbebfc1c2c3c4c5c7c8c9cccdcecfd0d4d5d6d7d8d9dadcdddedfe1e2e3e4e6e7e8e9ebecedeff0f1f2f3f4f5f6f7f8#fafbfcfdff,88:0001020405060708090b0c0d0e0f101112141718191a1c1d1e1f2023,7a00606f5e0c6089819d591560dc718470ef6eaa6c5072806a8488ad5e2d4e605ab3559c94e36d177cfb9699620f7ec6778e867e5323971e8f9666875ce14fa072ed4e0b53a6590f54136380952851484ed99c9c7ea454b88d248854823795f26d8e5f265acc663e966973:b02e,53bf817a99857fa15baa96:7750,7ebf76f853a2957699997bb189446e584e617fd479658be660f354cd4eab98795df76a6150cf54118c618427785d9704524a54ee56a395006d885bb56dc6665388:2425262728292a2b2c2d2e2f30313334353637383a3b3d3e3f414243464748494a4b4e4f505152535556585a5b5c5d5e5f6066676a6d6f717374757678797a#7b7c80838687898a8c8e8f90919394959798999a9b9d9e9fa0a1a3a5a6a7a8a9aa,5c0f5b5d6821809655787b11654869544e9b6b47874e978b534f631f643a90aa659c80c18c10519968b0537887f961c86c:c4fb,8c225c5185aa82af950c6b238f9b65b05f:fbc3,4fe18845661f8165732960fa51745211578b5f6290a2884c91925e78674f602759d351:44f6,80f853086c7996c4718a4f:11ee,7f9e673d55c5950879c088967ee3589f620c9700865a5618987b5f908bb884c4915753d965ed5e8f755c60647d6e5a7f7e:eaed,8f6955a75ba360ac65cb738488:acaeafb0b2b3b4b5b6b8b9babbbdbebfc0c3c4c7c8cacbcccdcfd0d1d3d6d7dadbdcdddee0e1e6e7e9eaebecedeeeff2f5f6f7fafbfdff,89:0001030405060708#090b0c0d0e0f1114151617181c1d1e1f20222324262728292c2d2e2f3132333537,9009766377297eda9774859b5b667a7496ea884052cb718f5faa65ec8be25bfb9a6f5de16b896c5b8b:adaf,900a8fc5538b62bc9e:262d,54404e2b82bd7259869c5d1688596daf96c554d14e9a8bb6710954bd960970df6df976d04e25781487125ca95ef68a00989c960e708e6cbf594463a9773c884d6f148273583071d5538c781a96c155015f6671305bb48c1a9a8c6b83592e9e2f79e76768626c4f6f75a17f8a6d0b96336c274ef075d2517b68376f3e908081705996747689:38393a3b3c3d3e3f40424345464748494a4b4c4d4e4f505152535455565758595a5b5c5d6061626364656768696a6b6c6d6e6f707172737475767778797a7c#7d7e808284858788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1,64475c2790657a918c2359da54ac8200836f898180006930564e8036723791ce51b64e5f987563964e1a53f666f3814b591c6db24e0058f9533b63d694f14f:9d0a,886398905937905779fb4eea80f075916c825b9c59e85f5d69058681501a5df24e5977e34ee5827a6291661390915c794ebf5f7981c69038808475ab4ea688d4610f6bc55fc64e4976ca6ea28b:e3ae,8c0a8bd15f027f:fccc,7ece83:356b,56e06bb797f3963459fb541f94f66deb5bc5996e5c395f15969089:a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c3cdd3d4d5d7d8d9dbdddfe0e1e2e4e7e8e9eaecedeef0f1f2f4f5f6f7f8f9fa#fbfcfdfeff,8a:01020304050608090a0b0c0d0e0f101112131415161718191a1b1c1d,537082f16a315a749e705e947f2883b984:2425,836787478fce8d6276c85f719896786c662054df62e54f6381c375c85eb896cd8e0a86f9548f6cf36d8c6c38607f52c775285e7d4f1860a05fe75c24753190ae94c072b96cb96e389149670953:cbf3,4f5191c98bf153c85e7c8fc26de44e8e76c26986865e611a82064f:59de,903e9c7c61096e:1d14,96854e885a3196e84e0e5c7f79b95b878bed7fbd738957df828b90c15401904755bb5cea5fa161086b3272f180b28a:891e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3f4041424344454647494a4b4c4d4e4f505152535455565758595a5b5c5d5e#5f606162636465666768696a6b6c6d6e6f7071727374757677787a7b7c7d7e7f80,6d745bd388d598848c6b9a6d9e336e0a51:a443,57a38881539f63f48f9556ed54585706733f6e907f188fdc82d1613f6028966266f07ea68d:8ac3,94a55cb37ca4670860a6960580184e9190e75300966851418fd08574915d665597f55b55531d78386742683d54c9707e5bb08f7d518d572854b1651266828d:5e43,810f846c906d7cdf51ff85fb67a365e96fa186a48e81566a90207682707671e58d2362e952196cfd8d3c600e589e618e66fe8d60624e55b36e23672d8f678a:81828384858687888b8c8d8e8f9091929495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2#c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3,94e195f87728680569a8548b4e4d70b88bc86458658b5b857a84503a5be877bb6be18a797c986cbe76cf65a98f975d2d5c5586386808536062187ad96e5b7efd6a1f7ae05f706f335f20638c6da867564e085e108d264ed780c07634969c62db662d627e6cbc8d7571677f695146808753ec906e629854f286f08f998005951785178fd96d5973cd659f771f7504782781fb8d1e94884fa6679575b98bca9707632f9547963584b8632377415f8172f04e896014657462ef6b63653f8a:e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,8b:0001020304050608090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223#24252728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445,5e2775c790d18bc1829d679d652f5431871877e580a281026c414e4b7ec7804c76f4690d6b966267503c4f84574063076b628dbe53ea65e87eb85fd763:1ab7,81:f3f4,7f6e5e1c5cd95236667a79e97a1a8d28709975d46ede6cbb7a924e2d76c55fe0949f88777ec879cd80bf91cd4ef24f17821f54685dde6d328bcc7ca58f7480985e1a549276b15b99663c9aa473e0682a86db6731732a8b:f8db,90107af970db716e62c477a956314e3b845767f152a986c08d2e94f87b518b:464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061626364656768696a6b6d6e6f707172737475767778797a7b7c7d7e7f80818283848586#8788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9facb1bbc7d0ea,8c:091e,4f4f6ce8795d9a7b6293722a62fd4e1378168f6c64b08d5a7bc668695e8488c55986649e58ee72b6690e95258ffd8d5857607f008c0651c6634962d95353684c74228301914c55447740707c6d4a517954a88d4459ff6ecb6dc45b5c7d2b4ed47c7d6ed35b5081ea6e0d5b579b0368d58e2a5b977efc603b7eb590b98d70594f63cd79df8db3535265cf79568bc5963b7ec494bb7e825634918967007f6a5c0a907566285de64f5067de505a4f5c57505e:a7#3$,8c:38393a3b3c3d3e3f4042434445484a4b4d4e4f5051525354565758595b5c5d5e5f60636465666768696c6d6e6f707172747576777b7c7d7e7f808183848687#888b8d8e8f90919293959697999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacad,4e:8d0c,51404e105eff53454e:15981e,9b325b6c56694e2879ba4e3f53154e47592d723b536e6c1056df80e499976bd3777e9f174e:369f,9f104e:5c6993,82885b5b556c560f4ec453:8d9da3a5ae,97658d5d53:1af5262e3e,8d5c53:6663,52:02080e2d333f404c5e615c,84af52:7d82819093,51827f544e:bbc3c9c2e8e1ebde,4f1b4ef34f:2264,4ef54f:2527092b5e67,65384f:5a5d,8c:aeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebec#edeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,8d:000102030405060708090a0b0c0d,4f:5f57323d76749189838f7e7baa7cac94e6e8eac5dae3dcd1dff8,50:294c,4ff350:2c0f2e2d,4ffe50:1c0c25287e4355484e6c7ba5a7a9bad6,510650:edece6ee,51:070b,4edd6c3d4f:5865ce,9fa06c467c74516e5dfd9ec999985181591452f9530d8a07531051eb591951554ea051564eb388:6ea4,4eb5811488d279805b3488037fb851:abb1bdbc,8d:0e0f101112131415161718191a1b1c205152575f6568696a6c6e6f717278797a7b7c7d7e7f808283868788898c8d8e8f90929395969798999a9b9c9d9ea0a1#a2a4a5a6a7a8a9aaabacadaeafb0b2b6b7b9bbbdc0c1c2c5c7c8c9cacdd0d2d3d4,51:c796a2a5,8b:a0a6a7aab4b5b7c2c3cbcfced2d3d4d6d8d9dcdfe0e4e8e9eef0f3f6f9fcff,8c:000204070c0f1112141516191b181d1f202125272a2b2e2f32333536,53:697a,96:1d2221312a3d3c4249545f676c7274888d97b0,90:979b9d99aca1b4b3b6ba,8d:d5d8d9dce0e1e2e5e6e7e9edeef0f1f2f4f6fcfeff,8e:00010203040607080b0d0e1011121315161718191a1b1c202124252627282b2d303233343637383b3c3e#3f4345464c4d4e4f505354555657585a5b5c5d5e5f60616263646567686a6b6e71,90:b8b0cfc5bed0c4c7d3e6e2dcd7dbebeffe,91:04221e23312f394346,520d594252:a2acadbe,54ff52:d0d6f0,53df71ee77cd5ef451:f5fc,9b2f53b65f01755a5def57:4ca9a1,58:7ebcc5d1,57:292c2a33392e2f5c3b4269856b867c7b686d7673ada48cb2cfa7b493a0d5d8dad9d2b8f4eff8e4dd,8e:73757778797a7b7d7e808283848688898a8b8c8d8e91929395969798999a9b9d9fa0a1a2a3a4a5a6a7a8a9aaadaeb0b1b3b4b5b6b7b8b9bbbcbdbebfc0c1c2#c3c4c5c6c7c8c9cacbcccdcfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4,58:0b0d,57:fded,58:001e194420656c81899a80,99a89f1961ff82:797d7f8f8aa8848e919799abb8beb0c8cae398b7aecbccc1a9b4a1aa9fc4cea4e1,830982:f7e4,83:0f07,82:dcf4d2d8,830c82:fbd3,83:111a061415,82:e0d5,83:1c515b5c08923c34319b5e2f4f47435f4017602d3a336665,8e:e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,8f:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223#2425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f4041424344,83:681b696c6a6d6eb078b3b4a0aa939c857cb6a97db87b989ea8babcc1,840183:e5d8,580784:180b,83:ddfdd6,84:1c381106,83:d4df,84:0f03,83:f8f9eac5c0,842683:f0e1,84:5c515a597387887a89783c4669768c8e316dc1cdd0e6bdd3cabfbae0a1b9b497e5e3,850c750d853884f085:391f3a,8f:45464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061626364656a808c929da0a1a2a4a5a6a7aaacadaeafb2b3b4b5b7b8babbbcbfc0c3c6#c9cacbcccdcfd2d6d7dae0e1e3e7eceff1f2f4f5f6fafbfcfeff,90:07080c0e131518,85:563b,84:fffc,85:594868645e7a,77a285:43727ba4a8878f79ae9c85b9b7b0d3c1dcff,86:270529163c,5efe5f0859:3c41,803759:555a58,530f5c:22252c34,62:4c6a9fbbcadad7ee,632262f663:394b43adf6717a8eb46dac8a69aebcf2f8e0ffc4dece,645263:c6be,64:45410b1b200c26215e846d96,90:191c2324252728292a2b2c303132333437393a3d3f4043454648494a4b4c4e545556595a5c5d5e5f6061646667696a6b6c6f70717273767778797a7b7c7e81#84858687898a8c8d8e8f90929496989a9c9e9fa0a4a5a7a8a9abadb2b7bcbdbfc0,64:7ab7b899bac0d0d7e4e2,65:09252e,5f:0bd2,75195f1153:5ff1fde9e8fb,54:1216064b5253545643215759233282947771649a9b8476669dd0adc2b4d2a7a6d3d472a3d5bbbfccd9dadca9aaa4ddcfde,551b54e7552054fd551454f355:22230f11272a678fb5496d41553f503c,90:c2c3c6c8c9cbcccdd2d4d5d6d8d9dadedfe0e3e4e5e9eaeceef0f1f2f3f5f6f7f9fafbfcff,91:00010305060708090a0b0c0d0e0f1011121314151617181a1b1c#1d1f20212425262728292a2b2c2d2e30323334353637383a3b3c3d3e3f40414244,55:375675767733305c8bd283b1b988819f7ed6917bdfbdbe9499eaf7c9,561f55:d1ebecd4e6ddc4efe5f2f3cccde8f5e4,8f9456:1e080c012423,55fe56:00272d5839572c4d62595c4c548664716b7b7c8593afd4d7dde1f5ebf9ff,57:040a091c,5e:0f191411313b3c,91:454748515354555658595b5c5f606667686b6d737a7b7c808182838486888a8e8f939495969798999c9d9e9fa0a1a4a5a6a7a8a9abacb0b1b2b3b6b7b8b9bb#bcbdbebfc0c1c2c3c4c5c6c8cbd0d2d3d4d5d6d7d8d9dadbdddedfe0e1e2e3e4e5,5e:3744545b5e61,5c:8c7a8d9096889899919a9cb5a2bdacabb1a3c1b7c4d2e4cbe5,5d:020327262e241e061b583e343d6c5b6f5d6b4b4a697482999d,8c735d:b7c5,5f:73778287898c95999ca8adb5bc,88625f6172:adb0b4b7b8c3c1cecdd2e8efe9f2f4f7,730172f3730372fa91:e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,92:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f2021222324#25262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445,72fb73:1713210a1e1d152239252c3831504d57606c6f7e,821b592598e759:2402,99:636768696a6b6c74777d8084878a8d9091939495,5e:80918b96a5a0b9b5beb3,8d535e:d2d1dbe8ea,81ba5f:c4c9d6cf,60035fee60045f:e1e4fe,60:0506,5f:eaedf8,60:1935261b0f0d292b0a3f2178797b7a42,92:464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f7071727375767778797a7b7c7d7e7f808182838485#868788898a8b8c8d8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7,60:6a7d969aad9d83928c9becbbb1ddd8c6dab4,61:20261523,60f461:000e2b4a75ac94a7b7d4f5,5fdd96b395:e9ebf1f3f5f6fcfe,96:030406080a0b0c0d0f12151617191a,4e2c723f62156c:35545c4aa38590948c6869747686a9d0d4adf7f8f1d7b2e0d6faebeeb1d3effe,92:a8a9aaabacadafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8#e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,93:00010203040506070809,6d:39270c43480704190e2b4d2e351a4f525433916f9ea05e93945c607c63,6e1a6d:c7c5de,6e0e6d:bfe0,6e116d:e6ddd9,6e166dab6e0c6dae6e:2b6e4e6bb25f865354322544dfb198e0,6f2d6e:e2a5a7bdbbb7d7b4cf8fc29f,6f:6246472415,6ef96f:2f364b742a0929898d8c78727c7ad1,93:0a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3f40414243444546474849#4a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696b,6f:c9a7b9b6c2e1eedee0ef,70:1a231b39354f5e,5b:80849593a5b8,752f9a9e64345b:e4ee,89305bf08e478b078f:b6d3d5e5eee4e9e6f3e8,90:05040b26110d162135362d2f445152506858625b,66b990:747d8288838b,5f:50575658,5c3b54ab5c:5059,5b715c:6366,7fbc5f:2a292d,82745f3c9b3b5c6e59:81838da9aaa3,93:6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaab#acadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cbcccd,59:97caab9ea4d2b2afd7be,5a:0506,59dd5a0859:e3d8f9,5a:0c09323411231340674a553c6275,80ec5a:aa9b777abeebb2d2d4b8e0e3f1d6e6d8dc,5b:091716323740,5c:151c,5b:5a6573515362,9a:7577787a7f7d808185888a90929396989b9c9d9fa0a2a3a5a7,7e:9fa1a3a5a8a9,93:cecfd0d1d2d3d4d5d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,94:000102030405060708090a0b0c0d#0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e,7e:adb0bec0c1c2c9cbccd0d4d7dbe0e1e8ebeeeff1f2,7f0d7e:f6fafbfe,7f:01020307080b0c0f111217191c1b1f212223242526272a2b2c2d2f3031323335,5e7a757f5ddb753e909573:8e91aea29fcfc2d1b7b3c0c9c8e5d9,987c740a73:e9e7debaf2,74:0f2a5b262528302e2c,94:2f303132333435363738393a3b3c3d3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6c6d6e6f#707172737475767778797a7b7c7d7e7f8081828384919698c7cfd3d4dae6fb,95:1c20,74:1b1a415c575559776d7e9c8e8081878b9ea8a990a7d2ba,97:eaebec,67:4c535e4869a5876a7398a775a89ead8b777cf0,680967d8680a67:e9b0,680c67:d9b5dab3dd,680067:c3b8e2,680e67:c1fd,68:323360614e624464831d55664167403e4a4929b58f7477936bc2,696e68fc69:1f20,68f995:27333d43484b555a606e74757778797a7b7c7d7e808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aa#abacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacb,692468f069:0b0157,68e369:10713960425d846b80987834cc8788ce896663799ba7bbabadd4b1c1cadf95e08dff,6a2f69ed6a:171865,69f26a:443ea0505b358e793d28587c9190a997ab,73:3752,6b:8182878492938d9a9ba1aa,8f:6b6d71727375767877797a7c7e818284878b,95:cccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7ecff,96:0713181b1e20232425262728292b2c2d2f303738393a3e41434a4e4f5152535657#58595a5c5d5e606365666b6d6e6f70717378797a7b7c7d7e7f808182838487898a,8f:8d8e8f989a,8ece62:0b171b1f222125242c,81e774:eff4ff,75:0f1113,65:34eeeff0,66:0a19,677266:031500,708566:f71d34313635,800666:5f54414f56615777848ca79dbedbdce6e9,8d:3233363b3d4045464849474d5559,89:c7cacbcccecfd0d1,72:6e9f5d666f7e7f848b8d8f92,63:0832b0,96:8c8e91929395969a9b9d9e9fa0a1a2a3a4a5a6a8a9aaabacadaeafb1b2b4b5b7b8babbbfc2c3c8cacbd0d1d3d4d6d7d8d9dadbdcdddedfe1e2e3e4e5e6e7eb#ecedeef0f1f2f4f5f8fafbfcfdff,97:0203050a0b0c10111214151718191a1b1d1f20,64:3fd8,80046b:eaf3fdf5f9,6c:0507060d1518191a2129242a32,65:35556b,72:4d525630,8662521680:9f9c93bc,670a80:bdb1abadb4b7e7e8e9eadbc2c4d9cdd7,671080:ddebf1f4ed,81:0d0e,80:f2fc,671581128c5a81:361e2c1832484c5374595a7160697c7d6d67,584d5ab581:888291,6ed581:a3aacc,672681:cabb,97:2122232425262728292b2c2e2f3133343536373a3b3c3d3f404142434445464748494a4b4c4d4e4f5051545557585a5c5d5f63646667686a6b6c6d6e6f7071#72757778797a7b7d7e7f8081828384868788898a8c8e8f9093959697999a9b9c9d,81:c1a6,6b:243739434659,98:d1d2d3d5d9da,6bb35f406bc289f365909f5165:93bcc6c4c3ccced2d6,70:809c969dbbc0b7abb1e8ca,71:1013162f31735c6845724a787a98b3b5a8a0e0d4e7f9,72:1d28,706c71:1866b9,62:3e3d434849,79:3b4046495b5c535a6257606f677a858a9aa7b3,5f:d1d0,97:9e9fa1a2a4a5a6a7a8a9aaacaeb0b1b3b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3#e4e5e8eeeff0f1f2f4f7f8f9fafbfcfdfeff,98:000102030405060708090a0b0c0d0e,60:3c5d5a67415963ab,61:060d5da99dcbd1,620680:807f,6c:93f6,6dfc77:f6f8,78:0009171811,65ab78:2d1c1d393a3b1f3c252c23294e6d56572650474c6a9b939a879ca1a3b2b9a5d4d9c9ecf2,790578f479:13241e34,9f9b9e:f9fbfc,76f177:040d,76f977:07081a22192d263538505147435a68,98:0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d#4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e,77:62657f8d7d808c919fa0b0b5bd,75:3a404e4b485b727983,7f:58615f,8a487f:68747179817e,76:cde5,883294:8586878b8a8c8d8f909497959a9b9ca3a4abaaadacafb0b2b4b6b7b8b9babcbdbfc4c8c9cacbcccdced0d1d2d5d6d7d9d8dbdedfe0e2e4e5e7e8ea,98:6f70717273748b8e929599a3a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcfd0d4d6d7dbdcdde0e1e2e3e4#e5e6e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,99:0001020304050607,94:e9ebeeeff3f4f5f7f9fcfdff,95:03020607090a0d0e0f1213141516181b1d1e1f222a2b292c3132343637383c3e3f4235444546494c4e4f525354565758595b5e5f5d61626465666768696a6b6c6f7172733a,77:e7ec,96c979:d5ede3eb,7a065d477a:03021e14,99:08090a0b0c0e0f1112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2f303132333435363738393a3b3c3d3e3f40414243444546474849#4a4b4c4d4e4f50515253565758595a5b5c5d5e5f60616264667378797b7e828389,7a:393751,9ecf99a57a7076:888e9399a4,74:dee0,752c9e:202228292a2b2c3231363837393a3e414244464748494b4c4e5155575a5b5c5e63666768696a6b6c716d73,75:929496a09daca3b3b4b8c4b1b0c3c2d6cde3e8e6e4ebe7,760375:f1fcff,76:1000050c170a25181519,99:8c8e9a9b9c9d9e9fa0a1a2a3a4a6a7a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8#d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9,76:1b3c2220402d303f35433e334d5e545c566b6f,7fca7a:e6787980868895a6a0aca8adb3,88:6469727d7f82a2c6b7bcc9e2cee3e5f1,891a88:fce8fef0,89:2119131b0a342b3641667b,758b80e576:b2b4,77dc80:1214161c20222526272928310b3543464d526971,898398:788083,99:fafbfcfdfeff,9a:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738#393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f50515253545556575859,98:898c8d8f949a9b9e9fa1a2a5a6,86:4d546c6e7f7a7c7ba88d8bac9da7a3aa93a9b6c4b5ceb0bab1afc9cfb4e9f1f2edf3d0,871386:def4dfd8d1,87:0307,86f887:080a0d09233b1e252e1a3e48343129373f82227d7e7b60704c6e8b53637c64596593afa8d2,9a:5a5b5c5d5e5f606162636465666768696a6b7283898d8e949599a6a9aaabacadaeafb2b3b4b5b9bbbdbebfc3c4c6c7c8c9cacdcecfd0d2d4d5d6d7d9dadbdc#dddee0e2e3e4e5e7e8e9eaeceef0f1f2f3f4f5f6f7f8fafcfdfeff,9b:000102040506,87:c68885ad9783abe5acb5b3cbd3bdd1c0cadbeae0ee,88:1613,87fe88:0a1b21393c,7f:36424445,82107a:fafd,7b:080304150a2b0f47382a192e31202524333e1e585a45754c5d606e7b62727190a6a7b8ac9da885aa9ca2abb4d1c1ccdddae5e6ea,7c0c7b:fefc,7c:0f160b,9b:07090a0b0c0d0e1011121415161718191a1b1c1d1e2021222425262728292a2b2c2d2e3031333435363738393a3d3e3f40464a4b4c4e50525355565758595a#5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b,7c:1f2a26384140,81fe82:010204,81ec884482:2122232d2f282b383b33343e44494b4f5a5f68,88:7e8588d8df,895e7f:9d9fa7afb0b2,7c7c65497c:919d9c9ea2b2bcbdc1c7cccdc8c5d7e8,826e66a87f:bfced5e5e1e6e9eef3,7cf87d:77a6ae,7e:479b,9e:b8b4,8d:73849491b1676d,8c:4749,91:4a504e4f64,9b:7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9ba#bbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadb,91:626170696f7d7e7274798c85908d91a2a3aaadaeafb5b4ba,8c559e7e8d:b8eb,8e:055969,8d:b5bfbcbac4d6d7dadececfdbc6ecf7f8e3f9fbe4,8e098dfd8e:141d1f2c2e232f3a4039353d3149414251524a70767c6f74858f94909c9e,8c:78828a859894,659b89:d6dedadc,9b:dcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,9c:000102030405060708090a0b0c0d0e0f101112131415161718191a#1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b,89:e5ebef,8a3e8b26975396:e9f3ef,97:0601080f0e2a2d303e,9f:808385868788898a8c,9efe9f:0b0d,96:b9bcbdced2,77bf96e092:8eaec8,93:3e6aca8f,94:3e6b,9c:7f8285868788,7a239c:8b8e90919294959a9b9e9fa0a1a2a3a5a6a7a8a9abadaeb0b1b2b3b4b5b6b7babbbcbdc4c5c6c7cacb3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a#7b7d7e808384898a8c8f93969798999daaacafb9bebfc0c1c2c8c9d1d2dadbe0e1cccdcecfd0d3d4d5d7d8d9dcdddfe2,97:7c85919294afaba3b2b4,9a:b1b0b7,9e589a:b6babcc1c0c5c2cbccd1,9b:45434749484d51,98e899:0d2e5554,9a:dfe1e6efebfbedf9,9b:080f131f23,9e:bdbe,7e3b9e:8287888b92,93d69e:9d9fdbdcdde0dfe2e9e7e5eaef,9f:222c2f39373d3e44,9c:e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,9d:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f2021#22232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142#92$434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f8081#82838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2#92$a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1#e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,9e:000102#92$030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e24272e30343b3c404d5052535456595d5f606162656e6f727475767778797a7b7c7d80#8183848586898a8c8d8e8f90919495969798999a9b9c9ea0a1a2a3a4a5a7a8a9aa#92$abacadaeafb0b1b2b3b5b6b7b9babcbfc0c1c2c3c5c6c7c8cacbccd0d2d3d5d6d7d9dadee1e3e4e6e8ebecedeef0f1f2f3f4f5f6f7f8fafdff,9f:000102030405#060708090a0c0f1112141516181a1b1c1d1e1f21232425262728292a2b2d2e3031#92$3233343536383a3c3f4041424345464748494a4b4c4d4e4f52535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778#797a7b7c7d7e81828d8e8f9091929394959697989c9d9ea1a2a3a4a5,f9:2c7995e7f1#92$,fa:0c0d0e0f111314181f20212324272829,e8:15161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40414243#4445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061626364".replace(/#(\d+)\$/g, function (e, a) { return Array(+a + 3).join("#") }).replace(/#/g, "####").replace(/(\w\w):([\w#]+)(?:,|$)/g, function (e, a, c) { return c.replace(/../g, function (e) { return "##" != e ? a + e : e }) }), d = {}, a = {}, c = e, f = 0; c = e.match(/..../g); for (var b, t = 129; t <= 254; t++)for (var r = 64; r <= 254; r++)d[c[f++]] = ("%" + t.toString(16) + "%" + r.toString(16)).toUpperCase(); for (b in d) a[d[b]] = b; return { encode: function (e) { return e.replace(/./g, function (e) { var a, c = e.charCodeAt(0); return 8364 == (a = c) || a <= 127 && 0 <= a ? encodeURIComponent(e) : (4 != (a = c.toString(16)).length && (a = ("000" + a).match(/....$/)[0]), d[a] || e) }) }, decode: function (e) { return e.replace(/%[0-9A-F]{2}%[0-9A-F]{2}/g, function (e) { return e in a ? String.fromCharCode("0x" + a[e]) : e }).replace(/%[\w]{2}/g, function (e) { return decodeURIComponent(e) }) } } } export { gbkTool };